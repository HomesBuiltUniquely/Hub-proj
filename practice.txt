'use client';

import Link from 'next/link';
import React, { useState, useRef } from 'react';
// ...existing code...

// Note: Replaced Next.js specific imports with standard tags for compatibility.
// import Link from "next/link"; 
// import Image from 'next/image';

export default function Section3() {
    const [currentSlide, setCurrentSlide] = useState(0);
    const [touchStart, setTouchStart] = useState<number | null>(null);
    const [touchEnd, setTouchEnd] = useState<number | null>(null);
    const carouselRef = useRef<HTMLDivElement>(null);
    
    const serviceCards = [
        {
            title: "Modular Interiors for Every Home",
            description: "Efficient layouts and space-saving designs crafted to fit kitchens, wardrobes, and storage — blending style with everyday functionality.",
            image: "https://tgqcnyhwjfretjmnlmaq.supabase.co/storage/v1/object/public/hubinteriors//Kitchen5.jpg",
            link: "/Services",
            borderColor: ""
        },
        {
            title: "End-to-End Interior Solutions", 
            description: "From concept to completion, we provide complete interior solutions — covering every room with design, execution, and finishing under one roof.",
            image: "/bed1.jpg",
            link: "/Services",
            borderColor: ""
        },
        {
            title: "Luxury Interiors Thoughtfully Crafted",
            description: "Luxury interiors thoughtfully built to balance modern design, comfort, and personal expression. elevating everyday lifestyle",
            image: "/bed4.jpg",
            link: "/Services",
            borderColor: ""
        },
    ];

    const nextSlide = () => {
        setCurrentSlide((prev) => (prev + 1) % serviceCards.length);
    };

    const prevSlide = () => {
        setCurrentSlide((prev) => (prev - 1 + serviceCards.length) % serviceCards.length);
    };

    // Touch event handlers for mobile swipe
    const handleTouchStart = (e: React.TouchEvent) => {
        setTouchEnd(null);
        setTouchStart(e.targetTouches[0].clientX);
    };

    const handleTouchMove = (e: React.TouchEvent) => {
        setTouchEnd(e.targetTouches[0].clientX);
    };

    const handleTouchEnd = () => {
        if (!touchStart || !touchEnd) return;
        
        const distance = touchStart - touchEnd;
        const isLeftSwipe = distance > 50; // Swiping left (next)
        const isRightSwipe = distance < -50; // Swiping right (previous)

        if (isLeftSwipe) {
            nextSlide();
        }
        if (isRightSwipe) {
            prevSlide();
        }
    };

    
    return (
        <div>
            <style jsx>{`
                /* Hide both sections by default on smaller screens */
                .desktop-1440,
                .desktop-1280 {
                    display: none;
                }

                /* Show 1280px version for medium desktops */
                @media (min-width: 1280px) and (max-width: 1439px) {
                    .desktop-1280 {
                        display: block;
                    }
                }

                /* Show 1440px version for large desktops */
                @media (min-width: 1440px) {
                    .desktop-1440 {
                        display: block;
                    }
                }
            `}</style>
        <div className="desktop-1440 hidden md:block bg-[#F1F2F6] h-auto pt-8 pb-20 px-8">
            <div className="max-w-7xl mx-auto">
                {/* Header Section */}
                <div className="flex flex-row justify-between items-center mb-12">
                    <h1 className="text-4xl wulkan-display-bold text-gray-800 ">All Interior Service, One Destination</h1>
                    <a href="/ContactUs">
                        <button className="bg-[#ddcdc1] hover:bg-[#ebd457] transition-colors text-black px-4 py-2 rounded-4xl font-semibold shadow shadow-lg shadow-black/20 hover:shadow-2xl hover:shadow-black/30 transform hover:-translate-y-0.5 active:translate-y-0 active:shadow-lg active:shadow-black/20 transition-shadow duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-red-500/60 manrope-medium flex items-center gap-2">
                            Book consultation
                            <div className="w-6 h-6 bg-gray-800 rounded-full flex items-center justify-center">
                                <svg className="w-3 h-3 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                                </svg>
                            </div>
                        </button>
                    </a>
                </div>

                {/* Carousel Section */}
                <div className="relative mt-20 mx-auto">
                    {/* Navigation Controls */}
                    <div className="absolute left-0 top-1/2 transform -translate-y-1/2 z-10 -translate-x-1/2">
                        <button 
                            onClick={prevSlide}
                            className="w-12 h-12 bg-white shadow-lg rounded-full flex items-center justify-center hover:bg-gray-50 transition-colors"
                        >
                            <svg className="w-6 h-6 text-gray-800" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
                            </svg>
                        </button>
                    </div>

                    <div className="absolute right-0 top-1/2 transform -translate-y-1/2 z-10 translate-x-1/2">
                        <button 
                            onClick={nextSlide}
                            className="w-12 h-12 bg-white shadow-lg rounded-full flex items-center justify-center hover:bg-gray-50 transition-colors"
                        >
                            <svg className="w-6 h-6 text-gray-800" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                            </svg>
                        </button>
                    </div>

                    {/* Service Cards */}
                    <div className="overflow-hidden">
                        <div 
                            className="flex gap-6 transition-transform duration-500 ease-in-out"
                            style={{ 
                                transform: `translateX(-${currentSlide * (100 / serviceCards.length)}%)`,
                            }}
                        >
                            {serviceCards.map((service, index) => (
                                <div key={index} className="flex-shrink-0 w-1/3">
                                    <div className={`bg-white rounded-3xl overflow-hidden hover:shadow-xl transition-shadow duration-300 h-auto flex flex-col`}>
                                        <div className="relative h-96">
                                            <img
                                                src={service.image}
                                                alt={service.title}
                                                className="w-full h-full object-cover"
                                            />
                                        </div>
                                        <div className="p-8 flex-1 flex flex-col text-center">
                                            <h3 className="text-2xl font-bold text-gray-800 mb-4 manrope-semibold">{service.title}</h3>
                                            <p className="text-gray-600 mb-6 leading-relaxed manrope-medium flex-grow">{service.description}</p>
                                            <a href={service.link} className="mt-auto block">
                                                <button className="w-full bg-[#ddcdc1] hover:bg-[#ebd457] transition-colors text-black px-4 py-2 rounded-4xl font-semibold shadow shadow-lg shadow-black/20 hover:shadow-2xl hover:shadow-black/30 transform hover:-translate-y-0.5 active:translate-y-0 active:shadow-lg active:shadow-black/20 transition-shadow duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-red-500/60 manrope-medium">
                                                    Request service
                                                </button>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            ))}
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        {/* Mobile Overlapping Carousel */}
        <div className="block md:hidden bg-[#F1F2F6] py-12">
            <h1 className="text-3xl sm:text-3xl wulkan-display-bold text-left px-5 -mt-5 pl-8">All Interior Service, One Destination</h1>
            
            <div
                ref={carouselRef}
                className="relative h-[560px] flex justify-center items-center -mt-5"
                onTouchStart={handleTouchStart}
                onTouchMove={handleTouchMove}
                onTouchEnd={handleTouchEnd}
            >
                {serviceCards.map((service, index) => {
                    const totalCards = serviceCards.length;
                    let position = (index - currentSlide + totalCards) % totalCards;
                    if (position > totalCards / 2) {
                        position -= totalCards;
                    }

                    let zIndex = 0, transform = '', opacity = 0, scale = 0.8;
                    
                    if (position === 0) {
                        zIndex = 30; transform = 'translateX(0px) translateY(-10px)'; scale = 0.9; opacity = 1;
                    } else if (position === -1 || position === totalCards - 1) {
                        zIndex = 20; transform = 'translateX(-50px) translateY(20px)'; scale = 0.9; opacity = 1;
                    } else if (position === -2 || position === totalCards - 2) {
                        // FIX: Reduced scale for the rearmost card
                        zIndex = 10; transform = 'translateX(-90px) translateY(50px)'; scale = 0.85; opacity = 1;
                    }

                    return (
                        <div
                            key={index}
                            className="absolute transition-all duration-500 ease-in-out ml-20"
                            style={{ zIndex, transform: `${transform} scale(${scale})`, opacity }}
                        >
                            <a href={service.link} className="block">
                                <div className="w-[260px] h-[420px] rounded-3xl overflow-hidden shadow-xl">
                                    <img
                                        src={service.image}
                                        alt={service.title}
                                        className="w-full h-full object-cover"
                                    />
                                    <div className="absolute bottom-0 left-0 right-0 p-4">
                                        <div className="bg-white/90 backdrop-blur-sm rounded-2xl p-4 shadow-lg">
                                            <h3 className="text-lg font-bold text-gray-800 mb-2 wulkan-display-bold">
                                                {service.title}
                                            </h3>
                                            <p className="text-sm text-gray-600 manrope-medium leading-relaxed">
                                            {service.description}
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </div>
                        
                    );
                })}
            </div>
            <div className="flex justify-center mt-8">
            <Link href="/">
                <button className="bg-[#ddcdc1] hover:bg-[#ebd457] transition-colors text-black px-4 py-2 rounded-4xl font-semibold shadow shadow-lg shadow-black/20 hover:shadow-2xl hover:shadow-black/30 transform hover:-translate-y-0.5 active:translate-y-0 active:shadow-lg active:shadow-black/20 transition-shadow duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-red-500/60 manrope">
                    Explore Services
                </button>
            </Link>
            </div>
        </div>
    </div>
    )
}



//



<div className="block md:hidden">
          {/* Mobile Version 1 - Small Mobile (320px to 479px) */}
          <div className="mobile-small w-[350px] h-[610px] relative bg-gray-100 rounded-[35px] overflow-hidden mx-auto -mt-7">
             {/* Mobile Header */}
            <div className="w-[340px] relative bg-gray-100 rounded-[35px] overflow-hidden mx-auto">

            <div className="relative z-20 flex items-center justify-between mt-4">
              <img src="/redlogo.png" className="w-[135px] h-[140px] pb-8 -mt-5 mb-7 pr-6"></img>
            </div>
            </div>

            
            <img className="w-[350px] h-[630px] rounded-4xl relative -mt-32 mx-auto" src={`/hh1${currentSlide + 1}.png`} />
            <div className="-mt-75 w-[300px] text-left text-4xl manrope text-white mx-auto wulkan-display-bold absolute ml-7">{mobileTexts[currentSlide]}</div>
             {/* Horizontal line above button */}
            <div className="w-[295px] h-[1px] bg-gray-300 absolute -mt-43 ml-7"></div>
            <button onClick={handleGetEstimate} className="bg-[#FF0000] text-white px-7 py-2 rounded-4xl -mt-40 ml-7 manrope-medium text-sm absolute h-[38px] w-[210px] shadow-lg shadow-black/50 hover:shadow-2xl transform hover:-translate-y-0.5 active:translate-y-0 active:shadow-lg transition-shadow duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-red-500/60">{heroSlides[currentSlide].buttonText}</button>
          </div>
             {/* Mobile Version 2 - Large Mobile (480px to 767px) */}
            <div className="mobile-large w-[350px] h-[550px] relative bg-gray-100 rounded-[35px] overflow-hidden mx-auto">
             {/* Mobile Header */}
            <div className="w-[340px] relative bg-gray-100 rounded-[35px] overflow-hidden mx-auto ">

            <div className="relative z-20 flex items-center justify-between mt-4 ">
              <img src="/redlogo.png" className="w-[110px] h-[120px] pb-6 -mt-5 mb-7 pr-8"></img>
            </div>
            </div>
            
            <img className="w-[340px] h-[500px] rounded-4xl relative -mt-32 mx-auto" src={`/hh1${currentSlide + 1}.png`} />
            <div className="-mt-62 w-[300px] text-left text-3xl manrope text-white mx-auto wulkan-display-bold absolute ml-8">{mobileTexts[currentSlide]}</div>
             {/* Horizontal line above button */}
            <div className="w-[300px] -mt-33 h-[1px] bg-gray-300 absolute -mt-8 ml-8"></div>
            <button className="bg-[#FF0000] text-white px-7 py-2 rounded-4xl -mt-28 ml-8 manrope-medium absolute shadow-lg shadow-black/50 hover:shadow-2xl transform hover:-translate-y-0.5 active:translate-y-0 active:shadow-lg transition-shadow duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-red-500/60">{heroSlides[currentSlide].buttonText}</button>
          </div>
          <OverlapNavBar />
      </div>

