'use client';

import { useEffect, useRef, useState } from "react";
import {NavBar} from "./Navbar"

export default function Header() {
  const images = ["1.svg", "2.png", "3.svg", "4.jpg"];
  const extendedImages = [images[images.length - 1], ...images, images[0]];

  const [currentIndex, setCurrentIndex] = useState(1);
  const [isTransitioning, setIsTransitioning] = useState(true);

  const touchStartXRef = useRef(0);
  const touchEndXRef = useRef(0);
  const mouseDownRef = useRef(false);

  useEffect(() => {
    const interval = setInterval(() => {
      goToNext();
    }, 3000);
    return () => clearInterval(interval);
  }, []);

  const handleTransitionEnd = () => {
    if (currentIndex === extendedImages.length - 1) {
      setTimeout(() => {
        setIsTransitioning(false);
        setCurrentIndex(1);
      }, 0);
    } else if (currentIndex === 0) {
      setTimeout(() => {
        setIsTransitioning(false);
        setCurrentIndex(images.length);
      }, 0);
    }
  };

  useEffect(() => {
    if (!isTransitioning) {
      // Trigger transition back ON after resetting position
      requestAnimationFrame(() => {
        setIsTransitioning(true);
      });
    }
  }, [isTransitioning]);

  const handleTouchStart = (e: any) => {
    if (!isTransitioning) return;
    touchStartXRef.current = e.touches[0].clientX;
  };

  const handleTouchEnd = (e: any) => {
    if (!isTransitioning) return;
    touchEndXRef.current = e.changedTouches[0].clientX;
    const distance = touchStartXRef.current - touchEndXRef.current;
    if (distance > 50) goToNext();
    else if (distance < -50) goToPrevious();
  };

  const handleMouseDown = (e: React.MouseEvent) => {
    if (!isTransitioning) return;
    mouseDownRef.current = true;
    touchStartXRef.current = e.clientX;
  };

  const handleMouseUp = (e: React.MouseEvent) => {
    if (!isTransitioning || !mouseDownRef.current) return;
    mouseDownRef.current = false;
    touchEndXRef.current = e.clientX;
    const distance = touchStartXRef.current - touchEndXRef.current;
    if (distance > 50) goToNext();
    else if (distance < -50) goToPrevious();
  };

  const handleMouseLeave = () => {
    mouseDownRef.current = false;
  };

  const goToNext = () => {
    if (!isTransitioning) return;
    setCurrentIndex((prev) => prev + 1);
  };

  const goToPrevious = () => {
    if (!isTransitioning) return;
    setCurrentIndex((prev) => prev - 1);
  };

  const getTransform = () => {
    return `translateX(-${currentIndex * 100}%)`;
  };

  return (
    <div className="relative w-full h-[850px] overflow-hidden bg-black">
      <NavBar />
      <div
        className="w-full h-full relative"
        onTouchStart={handleTouchStart}
        onTouchEnd={handleTouchEnd}
        onMouseDown={handleMouseDown}
        onMouseUp={handleMouseUp}
        onMouseLeave={handleMouseLeave}
        style={{ cursor: "grab", userSelect: "none" }}
      >
        {/* Left Arrow */}
        <button
          onClick={goToPrevious}
          aria-label="Previous slide"
          className="absolute top-1/2 left-4 z-10 transform -translate-y-1/2 bg-white hover:bg-opacity-90 rounded-full w-12 h-12 flex items-center justify-center shadow-md text-2xl"
          style={{ outline: "none" }}
          disabled={!isTransitioning}
        >
          &#8592;
        </button>

        {/* Right Arrow */}
        <button
          onClick={goToNext}
          aria-label="Next slide"
          className="absolute top-1/2 right-4 z-10 transform -translate-y-1/2 bg-white hover:bg-opacity-90 rounded-full w-12 h-12 flex items-center justify-center shadow-md text-2xl"
          style={{ outline: "none" }}
          disabled={!isTransitioning}
        >
          &#8594;
        </button>

        {/* Carousel */}
        <div
          className={`flex h-full w-full ${
            isTransitioning ? "transition-transform duration-[1500ms] ease-in-out" : ""
          }`}
          style={{ transform: getTransform() }}
          onTransitionEnd={handleTransitionEnd}
        >
          {extendedImages.map((src, idx) => (
            <img
              key={idx}
              src={src}
              alt={`Slide ${idx}`}
              className="w-full h-full object-cover flex-shrink-0"
              draggable={false}
              style={{ minWidth: "100%", minHeight: "100%" }}
            />
          ))}
        </div>
      </div>
    </div>
  );
}


'use client';

import { useEffect, useRef, useState } from "react";
import {NavBar} from "./Navbar"

export default function Header() {
  const images = ["1.svg", "2.png", "3.svg", "4.jpg"];
  const extendedImages = [images[images.length - 1], ...images, images[0]];

  const [currentIndex, setCurrentIndex] = useState(1);
  const [isTransitioning, setIsTransitioning] = useState(true);

  const touchStartXRef = useRef(0);
  const touchEndXRef = useRef(0);
  const mouseDownRef = useRef(false);

  useEffect(() => {
    const interval = setInterval(() => {
      goToNext();
    }, 3000);
    return () => clearInterval(interval);
  }, []);

  const handleTransitionEnd = () => {
    if (currentIndex === extendedImages.length - 1) {
      setTimeout(() => {
        setIsTransitioning(false);
        setCurrentIndex(1);
      }, 0);
    } else if (currentIndex === 0) {
      setTimeout(() => {
        setIsTransitioning(false);
        setCurrentIndex(images.length);
      }, 0);
    }
  };

  useEffect(() => {
    if (!isTransitioning) {
      requestAnimationFrame(() => {
        setIsTransitioning(true);
      });
    }
  }, [isTransitioning]);

  const handleTouchStart = (e: any) => {
    if (!isTransitioning) return;
    touchStartXRef.current = e.touches[0].clientX;
  };

  const handleTouchEnd = (e: any) => {
    if (!isTransitioning) return;
    touchEndXRef.current = e.changedTouches[0].clientX;
    const distance = touchStartXRef.current - touchEndXRef.current;
    if (distance > 50) goToNext();
    else if (distance < -50) goToPrevious();
  };

  const handleMouseDown = (e: React.MouseEvent) => {
    if (!isTransitioning) return;
    mouseDownRef.current = true;
    touchStartXRef.current = e.clientX;
  };

  const handleMouseUp = (e: React.MouseEvent) => {
    if (!isTransitioning || !mouseDownRef.current) return;
    mouseDownRef.current = false;
    touchEndXRef.current = e.clientX;
    const distance = touchStartXRef.current - touchEndXRef.current;
    if (distance > 50) goToNext();
    else if (distance < -50) goToPrevious();
  };

  const handleMouseLeave = () => {
    mouseDownRef.current = false;
  };

  const goToNext = () => {
    if (!isTransitioning) return;
    setCurrentIndex((prev) => prev + 1);
  };

  const goToPrevious = () => {
    if (!isTransitioning) return;
    setCurrentIndex((prev) => prev - 1);
  };

  const getTransform = () => {
    return `translateX(-${currentIndex * 100}%)`;
  };

  return (
    <div className="relative w-full h-[850px] overflow-hidden bg-black">
      <NavBar />
      <div
        className="w-full h-full relative"
        onTouchStart={handleTouchStart}
        onTouchEnd={handleTouchEnd}
        onMouseDown={handleMouseDown}
        onMouseUp={handleMouseUp}
        onMouseLeave={handleMouseLeave}
        style={{ cursor: "grab", userSelect: "none" }}
      >
        {/* Carousel without navigation arrows */}
        <div
          className={`flex h-full w-full ${
            isTransitioning ? "transition-transform duration-[1500ms] ease-in-out" : ""
          }`}
          style={{ transform: getTransform() }}
          onTransitionEnd={handleTransitionEnd}
        >
          {extendedImages.map((src, idx) => (
            <img
              key={idx}
              src={src}
              alt={`Slide ${idx}`}
              className="w-full h-full object-cover flex-shrink-0"
              draggable={false}
              style={{ minWidth: "100%", minHeight: "100%" }}
            />
          ))}
        </div>
      </div>
    </div>
  );
}




'use client';

import Image from "next/image";

export function BrandCorosal() {
  return (
    <div className="w-full overflow-hidden bg-[#F1F2F6] py-10">
      <div className="text-center mb-10 text-4xl gilda-display-regular text-amber-950 tracking-wider mt-3">Trusted Partners</div>
      <div className="flex scroll-track whitespace-nowrap mt-15 relative">
        <div className="flex-shrink-0 px-10 ">
          <Image loading="lazy" src="/Bulm1.webp" alt="Blum" fill className="h-20 mt-2 " />
        </div>
        <div className="flex-shrink-0 px-10">
          <Image loading="lazy" src="/ebco1.png" alt="Ebco" fill className="h-20 mt-4" />
        </div>
        <div className="flex-shrink-0 px-10">
          <Image loading="lazy" src="/elica1.png" alt="elica1" fill className="h-20 mt-5 " />
        </div>
        <div className="flex-shrink-0 px-10">
          <Image loading="lazy" src="/Faber1.png" alt="Faber" fill className="h-20 mt-6" />
        </div>
        <div className="flex-shrink-0 px-10">
          <Image loading="lazy"  src="/Hetich1.png" alt="Hettich" fill className="h-20  " />
        </div>
        <div className="flex-shrink-0 px-10">
          <Image loading="lazy"  src="/Rehau1.png" alt="Hettich" fill className="h-20  mt-1" />
        </div>
        <div className="flex-shrink-0 px-10">
          <Image  loading="lazy" src="/AsainPaints.png" alt="AsainPaints" fill className="h-20  mt-1" />
        </div>
      </div>
    </div>
  );
}



//cx

'use client';
import { useState, useEffect, useRef } from 'react';



export function CxSection() {

  const videos = [
    { src: 'https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//execution%20(1)%20(1)%20(1).mp4', title: 'Testimonial 1' },
    { src: 'https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//hub%20journey%20(1)%20(1)%20(1).mp4', title: 'Testimonial 2' },
    { src: 'https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//execution%20(1)%20(1)%20(1).mp4', title: 'Testimonial 3' },
    { src: 'https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//hub%20journey%20(1)%20(1)%20(1).mp4', title: 'Testimonial 4' }
  ];

  const [currentVideoIndex, setCurrentVideoIndex] = useState(0);
  const [isPlaying, setIsPlaying] = useState(false); // Start paused
  const videoRefs = useRef<(HTMLVideoElement | null)[]>([]);

  // Always show 3 videos (current, next, previous)
  const visibleVideos = [
    videos[(currentVideoIndex - 1 + videos.length) % videos.length],
    videos[currentVideoIndex],
    videos[(currentVideoIndex + 1) % videos.length]
  ];

  useEffect(() => {
    const interval = setInterval(() => {
      if (isPlaying) {
        setCurrentVideoIndex((prev) => (prev + 1) % videos.length);
      }
    }, 8000);
    return () => clearInterval(interval);
  }, [videos.length, isPlaying]);

  const togglePlayPause = () => {
    const centerVideo = videoRefs.current[1];
    if (centerVideo) {
      if (isPlaying) {
        centerVideo.pause();
      } else {
        centerVideo.play();
      }
      setIsPlaying(!isPlaying);
    }
  };

  const handleVideoClick = (index: number) => {
    if (index === 1) {
      togglePlayPause();
    } else {
      // Mute all videos first
      videoRefs.current.forEach(video => {
        if (video) video.muted = true;
      });
      
      setCurrentVideoIndex((currentVideoIndex + index - 1 + videos.length) % videos.length);
      setIsPlaying(false); // Keep paused when switching
      
      // Unmute the new center video after state update
      setTimeout(() => {
        if (videoRefs.current[1]) {
          videoRefs.current[1].muted = false;
        }
      }, 0);
    }
  };

  return (
    <div className="h-[750px] flex flex-col items-center bg-[#F1F2F6] py-10">
      <div className="text-center mb-12">
        <h1 className="text-4xl font-light gilda-display-regular text-amber-950 mb-4 mr-3">
          Testimonials
        </h1>
      </div>

      {/* Triple Video Carousel */}
      <div className="relative w-[90%] max-w-[1400px] h-[500px] flex gap-6 mt-10">
        {visibleVideos.map((video, index) => (
          <div 
            key={`${video.src}-${index}`}
            className={`relative flex-1 rounded-lg overflow-hidden shadow-2xl transition-all duration-500 ${
              index === 1 ? 'z-10 scale-105' : 'z-0 scale-95 opacity-90'
            }`}
            onClick={() => handleVideoClick(index)}
          >
            <video
              ref={(el: HTMLVideoElement | null) => {
                videoRefs.current[index] = el;
              }}
              src={video.src}
              className="w-full h-full object-cover cursor-pointer"
              autoPlay={false}
              muted={index !== 1}
              loop
              playsInline
            />
            
            {/* Centered play button (only shows when paused) */}
            {index === 1 && !isPlaying && (
              <button 
                onClick={(e) => {
                  e.stopPropagation();
                  togglePlayPause();
                }}
                className="absolute inset-0 m-auto w-16 h-16 bg-black/20 rounded-full flex items-center justify-center"
              >
                <span className="text-white text-3xl">▶</span>
              </button>
            )}
          </div>
        ))}
      </div>

      {/* Navigation indicators */}
      <div className="flex gap-4 mt-8">
        {videos.map((_, index) => (
          <button
            key={index}
            onClick={() => {
              // Mute all videos first
              videoRefs.current.forEach(video => {
                if (video) video.muted = true;
              });
              
              setCurrentVideoIndex(index);
              setIsPlaying(false); // Keep paused when navigating
              
              // Unmute the new center video after state update
              setTimeout(() => {
                if (videoRefs.current[1]) {
                  videoRefs.current[1].muted = false;
                }
              }, 0);
            }}
            className={`w-3 h-3 rounded-full transition-all ${
              currentVideoIndex === index ? 'bg-[#DDCDC1] w-6' : 'bg-gray-400'
            }`}
          />
        ))}
      </div>
    </div>
  );
}


//footer

import Link from "next/link"
import Image from "next/image";

export function Footer() {

  return (
      <footer className="bg-[#DDCDC1] pt-12 pb-6 px-6">
        {/* Top Section */}
        <div className="flex justify-around">

          <div>
            <h3 className="text-sm font-bold mb-4 text-[#2B1D14]">SUPPORT</h3>
            <ul className="space-y-2 text-sm text-[#4A3F35]">
              <div className="flex">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" className="size-4 mr-3 mt-0.5">
                  <path fillRule="evenodd" d="M19.5 9.75a.75.75 0 0 1-.75.75h-4.5a.75.75 0 0 1-.75-.75v-4.5a.75.75 0 0 1 1.5 0v2.69l4.72-4.72a.75.75 0 1 1 1.06 1.06L16.06 9h2.69a.75.75 0 0 1 .75.75Z" clipRule="evenodd" />
                  <path fillRule="evenodd" d="M1.5 4.5a3 3 0 0 1 3-3h1.372c.86 0 1.61.586 1.819 1.42l1.105 4.423a1.875 1.875 0 0 1-.694 1.955l-1.293.97c-.135.101-.164.249-.126.352a11.285 11.285 0 0 0 6.697 6.697c.103.038.25.009.352-.126l.97-1.293a1.875 1.875 0 0 1 1.955-.694l4.423 1.105c.834.209 1.42.959 1.42 1.82V19.5a3 3 0 0 1-3 3h-2.25C8.552 22.5 1.5 15.448 1.5 6.75V4.5Z" clipRule="evenodd" />
              </svg><li>+91 889 889 2223</li></div>
              <div className="flex">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" className="size-4 mr-3 mt-0.5">
                <path d="M1.5 8.67v8.58a3 3 0 0 0 3 3h15a3 3 0 0 0 3-3V8.67l-8.928 5.493a3 3 0 0 1-3.144 0L1.5 8.67Z" />
                <path d="M22.5 6.908V6.75a3 3 0 0 0-3-3h-15a3 3 0 0 0-3 3v.158l9.714 5.978a1.5 1.5 0 0 0 1.572 0L22.5 6.908Z" />
              </svg><li>hello@homesunderbudget.com</li></div>
              <div className="flex">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" className="size-4 mr-3 mt-0.5">
                <path fillRule="evenodd" d="m11.54 22.351.07.04.028.016a.76.76 0 0 0 .723 0l.028-.015.071-.041a16.975 16.975 0 0 0 1.144-.742 19.58 19.58 0 0 0 2.683-2.282c1.944-1.99 3.963-4.98 3.963-8.827a8.25 8.25 0 0 0-16.5 0c0 3.846 2.02 6.837 3.963 8.827a19.58 19.58 0 0 0 2.682 2.282 16.975 16.975 0 0 0 1.145.742ZM12 13.5a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z" clipRule="evenodd" />
              </svg><li>HBR Layout, Bangalore</li></div>
              <div className="flex">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" className="size-4 mr-3 mt-0.5">
                <path fillRule="evenodd" d="m11.54 22.351.07.04.028.016a.76.76 0 0 0 .723 0l.028-.015.071-.041a16.975 16.975 0 0 0 1.144-.742 19.58 19.58 0 0 0 2.683-2.282c1.944-1.99 3.963-4.98 3.963-8.827a8.25 8.25 0 0 0-16.5 0c0 3.846 2.02 6.837 3.963 8.827a19.58 19.58 0 0 0 2.682 2.282 16.975 16.975 0 0 0 1.145.742ZM12 13.5a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z" clipRule="evenodd" />
              </svg><li>Sarjapur Road, Bangalore</li></div>
            </ul>
          </div>
  
          {/* Social Media */}
          <div>
            <h3 className="text-sm font-bold mb-4 text-[#2B1D14] ml-8" >SOCIAL MEDIA</h3>
            <ul className="space-y-2 text-sm text-[#4A3F35]">
            <div className="flex"> 
              <div className="flex"><Image loading="lazy" src="/facebook.png" width={350} height={200} alt="facebook" className="size-5 mr-3 mb-1"></Image><li className="hover:text-amber-50"><Link href="https://www.facebook.com/HomesUnderBudget/" className="mr-5">Facebook</Link></li></div>
              <div className="flex"><Image loading="lazy" src="/twitter.png" width={350} height={200} alt="twitter" className="size-5 mr-3 mb-1"></Image><li className="hover:text-amber-50"><Link href="https://x.com/Homeunderbudget" className="">Twitter</Link></li></div>
            </div>
            <div className="flex">
              <div className="flex"><Image loading="lazy" src="/pinterest.png" width={350} height={200} alt="pintrest" className="size-5 mr-3 mb-1"></Image><li className="hover:text-amber-50"><Link href="https://in.pinterest.com/homesunderbudget/" className="mr-5">Pinterest</Link></li></div>
              <div className="flex ml-1.5"><Image loading="lazy" src="/instagram.png" width={350} height={200} alt="instagram" className="size-5 mr-3 mb-1"></Image><li className="hover:text-amber-50"><Link href="https://www.instagram.com/homesunderbudget/">Instagram</Link></li></div>
            </div>
            <div className="flex">
              <div className="flex"><Image loading="lazy" src="/youtube.png" width={350} height={200} alt="Youtube" className="size-5 mr-3 mb-1"></Image><li className="hover:text-amber-50"><Link href="https://www.youtube.com/@homesunderbudget" className="mr-5">Youtube</Link></li></div>
              <div className="flex ml-3"><Image loading="lazy" src="/message.png" width={350} height={200} alt="Linkdin" className="size-5 mr-3 mb-1"></Image><li className="hover:text-amber-50"><Link href="https://www.linkedin.com/company/homesunderbudget/">LinkedIn</Link></li></div>
            </div>
            </ul>
          </div>

        </div>
  
        {/* Divider */}
        <div className="border-t border-[#B4A596] mt-12 mb-6"></div>
  
        {/* Bottom Bar */}
        <div className="max-w-7xl mx-auto flex flex-col md:flex-row justify-between items-center gap-4 px-2">
          <p className="text-sm text-[#5A4C43]">
            © 2025 BRIGHTSPACE CREATIONS PRIVATE LIMITED All rights reserved.
          </p>
        </div>
      </footer>
    );
  }


  //form

'use client';
import { useState } from 'react';
import Image from 'next/image';

type RoomType = 'Living Room' | 'Kitchen Room' | 'BedRoom' | 'Kids Room' | 'Devotional Room';

interface RoomItem {
  image: string;
}

export function Form() {
  const [activeRoom, setActiveRoom] = useState<RoomType>('Living Room');
  const [hoveredRoom, setHoveredRoom] = useState<RoomType | null>(null);

  const roomData: Record<RoomType, RoomItem[]> = {
    'Living Room': [
      { image: 'https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4/img1.jpg' },
      { image: 'https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4/img2.jpg' },
      { image: 'https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4/img3.jpg' },
      { image: 'https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4/img4.jpg' },
      { image: 'https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4/img5.jpg' },
      { image: 'https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4/img6.jpg' }
    ],
    'Kitchen Room': [
      { image: '/kitchen1.jpg' },
      { image: '/kitchen2.jpg' },
      { image: '/kitchen3.jpg' },
      { image: '/kitchen4.jpg' },
      { image: '/kitchen5.jpg' },
      { image: '/kitchen6.jpg' }
    ],
    'BedRoom': [
      { image: '/bed1.jpg' },
      { image: '/bed2.jpg' },
      { image: '/bed3.jpg' },
      { image: '/bed4.jpg' },
      { image: '/bed5.jpg' },
      { image: '/bed6.jpg' }
    ],
    'Kids Room': [
      { image: '/kids1.jpg' },
      { image: '/kids2.jpg' },
      { image: '/kids3.jpg' },
      { image: '/kids4.jpg' },
      { image: '/kids5.jpg' },
      { image: '/kids6.jpg' }
    ],
    'Devotional Room': [
      { image: '/pooja1.jpg' },
      { image: '/pooja2.jpg' },
      { image: '/pooja3.jpg' },
      { image: '/pooja4.jpg' },
      { image: '/pooja5.jpg' },
      { image: '/pooja6.jpg' }
    ]
  };

  const roomTypes = Object.keys(roomData) as RoomType[];

  return (
    <div className="min-h-screen mt-25 ml-30 text">
      <h1 className="text-4xl font-extrabold text-amber-950 tracking-wider gilda-display-regular mb-15">
        The Features You Need, The Simplicity You Want
      </h1>

      <div className="flex">
        {/* Sidebar with hover effect only */}
        <div className="w-[250px] sticky top-20 h-fit mt-10 ">
          {roomTypes.map((room) => (
            <div
              key={room}
              className="relative h-[50px] mb-10"
              onMouseEnter={() => setHoveredRoom(room)}
              onMouseLeave={() => setHoveredRoom(null)}
              onClick={() => setActiveRoom(room)}
            >
              {/* Hover background only */}
              <div
                className={`absolute inset-0 rounded-3xl transition-all duration-300 z-0 ${
                  hoveredRoom === room ? 'bg-[#DDCDC1] opacity-100' : 'opacity-0'
                }`}
              />
              <h1
                className="relative z-10 text-center text-[20px] font-bold cursor-pointer gilda-display-regular h-full flex items-center justify-center"
              >
                {room}
              </h1>
            </div>
          ))}
        </div>

        {/* Content section */}
        <div className="ml-20 flex-1">
          <div className="flex flex-wrap gap-6">
            {roomData[activeRoom].map((item, index) => (
              <div
                key={`${activeRoom}-${index}`}
                className="w-[290px] h-[330px] rounded-3xl overflow-hidden"
              >
                <Image
                  loading='lazy'
                  width={290} height={330}
                  src={item.image}
                  alt=""
                  className="w-full h-full object-cover"
                />
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
}


//herosection


"use client"

import { useEffect, useState } from "react";
import Link from 'next/link';
import Image from 'next/image'

export function HeroSection(){
    // State to track scroll position
    const [videoSize, setVideoSize] = useState({ width: 800, height: 450 });

    useEffect(() => {
        function handleScroll() {
            const scrollY = window.scrollY;
            const maxScroll = 500;
            const progress = Math.min(scrollY / maxScroll, 1);
            const width = 800 + (1200 - 800) * progress;
            const height = 450 + (675 - 450) * progress;
            setVideoSize({ width, height });
        }
        window.addEventListener("scroll", handleScroll);
        return () => window.removeEventListener("scroll", handleScroll);
    }, []);

    return (
        <div>
        <div className="  h-[1000px]" style={{backgroundColor: '#F1F2F6'}}>
            <div className="">
            <div className="text-5xl mt-29  mb-4 font-semibold text-amber-950 text-center tracking-wider pl-8 pt-10 gilda-display-regular" >Homes, Uniquely Built</div>
            <div className="text-center text-[18px] font-semibold text-amber-950 pl-10 pt-2 " > Your Home Deserves More Than Just Design — it deserves the story only your home can tell </div>
            <Link href="/Contact"><div className="w-[150px] h-[45px] bg-[#DDCDC1] ml-165 mt-10 text-center pt-2.5 rounded-full gilda-display-regular  ">Get Consultation</div></Link>
                <div className="flex justify-center items-start ">
                    {/* Left column - fixed width, no grow/shrink */}
                    <div className="flex flex-col flex-shrink-0 flex-grow-0 w-[350px]">
                        <div className=" w-[350px] h-[200px] ml-20 rounded-2xl relative">
                            <Image loading="lazy" src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//img1.jpg" alt="" width={350} height={200} className="object-cover rounded-2xl"></Image>
                        </div>
                        <div className=" w-[150px] h-[170px] rounded-2xl mt-35 ml-40">
                            <Image loading="lazy" src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//img3.jpg" alt="" width={150} height={170} className="object-cover rounded-2xl w-[150px] h-[170px]"></Image>
                        </div>
                    </div>

                    {/* Center column - fixed width, relative for overlay, no grow/shrink */}
                    <div className="relative flex flex-col items-center justify-start flex-shrink-0 flex-grow-0 w-[800px] min-w-[800px] max-w-[800px]">
                        {/* Absolutely positioned expanding video, overlays but never shifts layout */}
                        <div
                            className=" -ml-1 rounded-2xl flex items-center justify-center"
                            style={{
                                position: 'absolute',
                                left: '50%',
                                top: '120px', // adjust as needed
                                transform: 'translateX(-50%)',
                                width: videoSize.width,
                                height: videoSize.height,
                                zIndex: 20,
                                transition: 'width 0.3s, height 0.3s',
                                boxShadow: '0 8px 32px rgba(0,0,0,0.15)',
                                pointerEvents: 'none',
                                maxWidth: 'none',
                            }}
                        >
                            <video
                                src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//DemoVideo.mp4"
                                style={{ width: '100%', height: '100%', objectFit: 'cover', borderRadius: '1rem' }}
                                autoPlay
                                muted
                                loop
                                playsInline
                            />
                        </div>
                    </div>
                    {/* Right column - fixed width, no grow/shrink */}
                    <div className= "w-[270px] h-[350px] rounded-2xl mr-20  ml-2 flex-shrink-0 flex-grow-0">
                        <Image loading="lazy" src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//img2.jpg" alt="" width={270} height={350} className="object-cover rounded-2xl "></Image>
                    </div>
                </div>
            </div>
            </div>
            
        </div>
    )
}


//QA section

'use client';
import { useState } from 'react';
import { FaPlus, FaMinus } from 'react-icons/fa';

interface FAQItem {
  question: string;
  answer: string;
}

const faqData: FAQItem[] = [
  {
    question: 'What is the interior design cost in Bangalore for 2BHK, 3BHK, villa, and kitchen?',
    answer: `Interior design costs in Bangalore depend on factors like home size, materials, and customization. At HUB Interior, we offer transparent pricing and affordable design packages:
              2BHK Interiors: ₹2.8 Lakhs onwards

              3BHK Interiors: ₹3.8 Lakhs onwards

              Villa Interiors: ₹5.5 Lakhs onwards

              Kitchen Interiors: ₹1.25 Lakhs onwards

              Our focus is on budget-friendly interiors with premium finishes and high-quality craftsmanship.`
  },
  {
    question: ' What common interior design mistakes should I avoid?',
    answer: `Here are 5 common design mistakes:
            Poor Space Planning → Fix: Optimize layout flow and furniture placement.
            Ignoring Lighting → Fix: Use a combination of task, ambient, and accent lighting.
            Choosing Style Over Comfort → Fix: Prioritize comfort and usability.
            Skipping Storage → Fix: Include multifunctional storage units.
            No Personal Touch → Fix: Add art, photos, and meaningful decor.
            Avoiding these ensures your home is functional and reflects your personality.`
  },
  {
    question: 'Why should I choose HUB Interior for my interior design needs?',
    answer: `HUB Interior offers stylish and durable interiors at an affordable price. Whether you're looking for 2BHK, 3BHK, villa, or modular kitchen interiors, we provide complete solutions with:
              Transparent pricing
              10-year warranty
              No Cost EMI
              25% off on selected packages
              End-to-end project delivery
              Our expert designers turn your ideas into beautiful, functional spaces.`
  },
  {
    question: 'What interior solutions do you offer in Bangalore?',
    answer: `Our complete home interior services in Bangalore include:
              Modular Kitchen & Wardrobes
              TV Units & Entertainment Spaces
              Prayer Units & Study Areas
              Wall Décor & Kids’ Room Designs
              False Ceiling & Lighting
              Foyer & Bar Unit Designs
              Whether you're designing a new home or renovating, we offer affordable interior designers in Bangalore who deliver functional, beautiful spaces.`
  }
];

export function QAsection() {
  const [openIndex, setOpenIndex] = useState<number | null>(null);

  const toggle = (index: number) => {
    setOpenIndex(openIndex === index ? null : index);
  };

  return (
    <div className="min-h-screen px-6 py-16 bg-[#F1F2F6]">
      <h1 className="text-4xl mb-10 text-amber-950 font-semibold gilda-display-regular ml-30">
        Frequently Asked Questions
      </h1>

      <div className="max-w-5xl mx-auto space-y-6 mt-20">
        {faqData.map((item, index) => (
          <div key={index} className="pb-6">
            <div
              className={`border-l-[4px] pl-4 rounded-sm py-4 transition-all duration-300 ${
                openIndex === index ? 'border-[#DDCDC1]' : 'border-transparent'
              }`}
            >
              <button
                className="w-full flex justify-between items-center text-left"
                onClick={() => toggle(index)}
              >
                <span className="text-lg font-medium text-amber-950">
                  {item.question}
                </span>
                <span className="text-amber-950">
                  {openIndex === index ? <FaMinus /> : <FaPlus />}
                </span>
              </button>

              {openIndex === index && (
                <div className="mt-4 text-amber-950 text-base leading-relaxed">
                  {item.answer}
                </div>
              )}
            </div>

            {/* Horizontal line after each question */}
            <hr className="border-t border-gray-300 mt-4" />
          </div>
        ))}
      </div>
    </div>
  );
}


brand BrandCorosal

'use client';

import Image from 'next/image';
import { useEffect, useRef } from 'react';

export function BrandCorosal() {
  const logos = [
    { src: '/Bulm1.webp', alt: 'Blum' },
    { src: '/ebco1.png', alt: 'Ebco' },
    { src: '/elica1.png', alt: 'Elica' },
    { src: '/Faber1.png', alt: 'Faber' },
    { src: '/Hetich1.png', alt: 'Hettich' },
    { src: '/Rehau1.png', alt: 'Rehau' },
    { src: '/AsainPaints.png', alt: 'Asian Paints' },
  ];

  const containerRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    const container = containerRef.current;
    if (!container) return;

    let scrollAmount = 0;
    let direction = 1;

    const scrollInterval = setInterval(() => {
      if (container) {
        scrollAmount += 1;
        container.scrollLeft += direction;

        // Reset scroll to start when halfway through (infinite loop)
        if (scrollAmount >= container.scrollWidth / 2) {
          container.scrollLeft = 0;
          scrollAmount = 0;
        }
      }
    }, 20); // Speed of scroll

    return () => clearInterval(scrollInterval);
  }, []);

  // Duplicate the logos for seamless infinite scroll
  const allLogos = [...logos, ...logos];

  return (
    <div className="w-full bg-[#F1F2F6] py-10 overflow-hidden">
      <div className="text-center mb-10 text-3xl sm:text-4xl font-light gilda-display-regular text-amber-950 tracking-wider">
        Trusted Partners
      </div>

      <div
        ref={containerRef}
        className="flex w-full overflow-x-scroll whitespace-nowrap no-scrollbar hover:pause-scroll"
      >
        {allLogos.map((logo, idx) => (
          <div
            key={idx}
            className="flex-shrink-0 px-10 py-2 flex items-center justify-center"
          >
            <Image
              loading="lazy"
              src={logo.src}
              alt={logo.alt}
              width={120}
              height={60}
              className="object-contain"
            />
          </div>
        ))}
      </div>
    </div>
  );
}


export function Featurespro() {
    return (
        <div className="min-h-[800px] lg:py-27 sm:px-6 lg:px-10 lg:ml-20 ">
            <h1 className="text-2xl text-center lg:text-left gilda-display-regular mb-15 sm:mb-12 lg:mb-20 text-amber-950 lg:ml-105">
                Why Choose HUB Interiors?
            </h1>
            
            {/* First Row */}
            <div className="flex flex-col lg:flex-row gap-6 lg:gap-8 mb-6 lg:mb-8">
                {/* 10-Years Warranty */}
                <div className="border-2 border-[#DDCDC1] w-full lg:w-[600px] h-auto min-h-[280px] rounded-3xl p-6 sm:p-8">
                    <div className="flex justify-between items-start">
                        <div className="text-xl sm:text-2xl font-bold">10-Years Warranty</div>
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" 
                             className="size-8 sm:size-10 fill-[#DDCDC1]">
                            <path fillRule="evenodd" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25ZM12.75 6a.75.75 0 0 0-1.5 0v6c0 .414.336.75.75.75h4.5a.75.75 0 0 0 0-1.5h-3.75V6Z" clipRule="evenodd" />
                        </svg>
                    </div>
                    <div className="mt-6 sm:mt-8 tracking-wider text-sm sm:text-base font-semibold">
                        Every material we use and every detail we craft comes backed with a 10-year warranty — because timeless interiors deserve timeless trust.
                    </div>
                </div>

                {/* 0% EMI */}
                <div className="border-2 border-[#DDCDC1] w-full lg:w-[600px] h-auto min-h-[280px] rounded-3xl p-6 sm:p-8">
                    <div className="flex justify-between items-start">
                        <div className="text-xl sm:text-2xl font-bold">0% EMI</div>
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" 
                             className="size-8 sm:size-10 fill-[#DDCDC1]">
                            <path fillRule="evenodd" d="M11.99 2.243a4.49 4.49 0 0 0-3.398 1.55 4.49 4.49 0 0 0-3.497 1.306 4.491 4.491 0 0 0-1.307 3.498 4.491 4.491 0 0 0-1.548 3.397c0 1.357.6 2.573 1.548 3.397a4.491 4.491 0 0 0 1.307 3.498 4.49 4.49 0 0 0 3.498 1.307 4.49 4.49 0 0 0 3.397 1.549 4.49 4.49 0 0 0 3.397-1.549 4.49 4.49 0 0 0 3.497-1.307 4.491 4.491 0 0 0 1.306-3.497 4.491 4.491 0 0 0 1.55-3.398c0-1.357-.601-2.573-1.549-3.397a4.491 4.491 0 0 0-1.307-3.498 4.49 4.49 0 0 0-3.498-1.307 4.49 4.49 0 0 0-3.396-1.549Zm3.53 7.28a.75.75 0 0 0-1.06-1.06l-6 6a.75.75 0 1 0 1.06 1.06l6-6Zm-5.78-.905a1.125 1.125 0 1 0 0 2.25 1.125 1.125 0 0 0 0-2.25Zm4.5 4.5a1.125 1.125 0 1 0 0 2.25 1.125 1.125 0 0 0 0-2.25Z" clipRule="evenodd" />
                        </svg>
                    </div>
                    <div className="mt-6 sm:mt-8 tracking-wider text-sm sm:text-base font-semibold">
                        Bring home the interiors you love with our 0% interest EMI plans — flexible, stress-free, and designed around your comfort.
                    </div>
                </div>
            </div>

            {/* Second Row */}
            <div className="flex flex-col lg:flex-row gap-6 lg:gap-8">
                {/* Factory Finish Interiors */}
                <div className="border-2 border-[#DDCDC1] w-full lg:w-[600px] h-auto min-h-[280px] rounded-3xl p-6 sm:p-8">
                    <div className="flex justify-between items-start">
                        <div className="text-xl sm:text-2xl font-bold">Factory Finish Interiors</div>
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" 
                             className="size-8 sm:size-10 fill-[#DDCDC1]">
                            <path fillRule="evenodd" d="M12.516 2.17a.75.75 0 0 0-1.032 0 11.209 11.209 0 0 1-7.877 3.08.75.75 0 0 0-.722.515A12.74 12.74 0 0 0 2.25 9.75c0 5.942 4.064 10.933 9.563 12.348a.749.749 0 0 0 .374 0c5.499-1.415 9.563-6.406 9.563-12.348 0-1.39-.223-2.73-.635-3.985a.75.75 0 0 0-.722-.516l-.143.001c-2.996 0-5.717-1.17-7.734-3.08Zm3.094 8.016a.75.75 0 1 0-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 0 0-1.06 1.06l2.25 2.25a.75.75 0 0 0 1.14-.094l3.75-5.25Z" clipRule="evenodd" />
                        </svg>
                    </div>
                    <div className="mt-6 sm:mt-8 tracking-wider text-sm sm:text-base font-semibold">
                        Enjoy flawless factory-finish interiors with premium craftsmanship, seamless edges, and unmatched detailing — all tailored to your home.
                    </div>
                </div>

                {/* 34 Days Delivery */}
                <div className="border-2 border-[#DDCDC1] w-full lg:w-[600px] h-auto min-h-[280px] rounded-3xl p-6 sm:p-8">
                    <div className="flex justify-between items-start">
                        <div className="text-xl sm:text-2xl font-bold">34 Days Delivery</div>
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" 
                             className="size-8 sm:size-10 fill-[#DDCDC1]">
                            <path fillRule="evenodd" d="M12 6.75a5.25 5.25 0 0 1 6.775-5.025.75.75 0 0 1 .313 1.248l-3.32 3.319c.063.475.276.934.641 1.299.365.365.824.578 1.3.64l3.318-3.319a.75.75 0 0 1 1.248.313 5.25 5.25 0 0 1-5.472 6.756c-1.018-.086-1.87.1-2.309.634L7.344 21.3A3.298 3.298 0 1 1 2.7 16.657l8.684-7.151c.533-.44.72-1.291.634-2.309A5.342 5.342 0 0 1 12 6.75ZM4.117 19.125a.75.75 0 0 1 .75-.75h.008a.75.75 0 0 1 .75.75v.008a.75.75 0 0 1-.75.75h-.008a.75.75 0 0 1-.75-.75v-.008Z" clipRule="evenodd" />
                            <path d="m10.076 8.64-2.201-2.2V4.874a.75.75 0 0 0-.364-.643l-3.75-2.25a.75.75 0 0 0-.916.113l-.75.75a.75.75 0 0 0-.113.916l2.25 3.75a.75.75 0 0 0 .643.364h1.564l2.062 2.062 1.575-1.297Z" />
                            <path fillRule="evenodd" d="m12.556 17.329 4.183 4.182a3.375 3.375 0 0 0 4.773-4.773l-3.306-3.305a6.803 6.803 0 0 1-1.53.043c-.394-.034-.682-.006-.867.042a.589.589 0 0 0-.167.063l-3.086 3.748Zm3.414-1.36a.75.75 0 0 1 1.06 0l1.875 1.876a.75.75 0 1 1-1.06 1.06L15.97 17.03a.75.75 0 0 1 0-1.06Z" clipRule="evenodd" />
                        </svg>
                    </div>
                    <div className="mt-6 sm:mt-8 tracking-wider text-sm sm:text-base font-semibold">
                        Experience thoughtfully designed spaces with our fast-track delivery promise — without compromising on quality, detail, or elegance.
                    </div>
                </div>
            </div>
        </div>
    )
}


//Form

'use client';
import { useState, useEffect} from 'react';
import Image from 'next/image';

type RoomType = 'Living Room' | 'Kitchen Room' | 'BedRoom' | 'Kids Room' | 'Devotional Room';

interface RoomItem {
  image: string;
}

export function Form() {
  const [activeRoom, setActiveRoom] = useState<RoomType>('Living Room');
  const [hoveredRoom, setHoveredRoom] = useState<RoomType | null>(null);
  const [currentIndex, setCurrentIndex] = useState(0);
  const [isAutoPlaying, setIsAutoPlaying] = useState(true);
  // const carouselRef = useRef<HTMLDivElement>(null);

  const roomData: Record<RoomType, RoomItem[]> = {
    'Living Room': [
      { image: 'https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4/img1.jpg' },
      { image: 'https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4/img2.jpg' },
      { image: 'https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4/img3.jpg' },
      { image: 'https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4/img4.jpg' },
      { image: 'https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4/img5.jpg' },
      { image: 'https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4/img6.jpg' }
    ],
    'Kitchen Room': [
      { image: '/kitchen1.jpg' },
      { image: '/kitchen2.jpg' },
      { image: '/kitchen3.jpg' },
      { image: '/kitchen4.jpg' },
      { image: '/kitchen5.jpg' },
      { image: '/kitchen6.jpg' }
    ],
    'BedRoom': [
      { image: '/bed1.jpg' },
      { image: '/bed2.jpg' },
      { image: '/bed3.jpg' },
      { image: '/bed4.jpg' },
      { image: '/bed5.jpg' },
      { image: '/bed6.jpg' }
    ],
    'Kids Room': [
      { image: '/kids1.jpg' },
      { image: '/kids2.jpg' },
      { image: '/kids3.jpg' },
      { image: '/kids4.jpg' },
      { image: '/kids5.jpg' },
      { image: '/kids6.jpg' }
    ],
    'Devotional Room': [
      { image: '/pooja1.jpg' },
      { image: '/pooja2.jpg' },
      { image: '/pooja3.jpg' },
      { image: '/pooja4.jpg' },
      { image: '/pooja5.jpg' },
      { image: '/pooja6.jpg' }
    ]
  };

  const roomTypes = Object.keys(roomData) as RoomType[];

  // Auto-rotate carousel on mobile
  useEffect(() => {
    if (window.innerWidth >= 1024) return; // Only for mobile
    
    if (!isAutoPlaying) return;
    
    const interval = setInterval(() => {
      setCurrentIndex(prev => (prev + 1) % roomData[activeRoom].length);
    }, 3000);

    return () => clearInterval(interval);
  }, [activeRoom, isAutoPlaying, roomData]);

  const goToNext = () => {
    setIsAutoPlaying(false);
    setCurrentIndex(prev => (prev + 1) % roomData[activeRoom].length);
  };

  const goToPrev = () => {
    setIsAutoPlaying(false);
    setCurrentIndex(prev => (prev - 1 + roomData[activeRoom].length) % roomData[activeRoom].length);
  };

  return (
    <div className="min-h-screen lg:py-30 px-4 lg:px-8 lg:ml-30 bg-[#F1F2F6] hide-scrollbar">
      <h1 className="text-2xl lg:text-4xl font-extrabold text-amber-950 tracking-wider gilda-display-regular mb-8 lg:mb-15 sm:text-left lg:text-left">
        The Features You Need, The Simplicity You Want
      </h1>

      <div className="flex flex-col lg:flex-row mt-20">
        {/* Mobile Room Selector */}
        <div className="lg:hidden mb-10  flex overflow-x-auto gap-3 hide-scrollbar">
          {roomTypes.map((room) => (
            <button
              key={room}
              onClick={() => {
                setActiveRoom(room);
                setCurrentIndex(0);
                setIsAutoPlaying(true);
              }}
              className={`px-4 py-2 rounded-full whitespace-nowrap ${
                activeRoom === room
                  ? 'bg-[#DDCDC1] text-amber-950 font-bold'
                  : 'bg-white text-gray-700'
              }`}
            >
              {room}
            </button>
          ))}
        </div>

        {/* Desktop Sidebar */}
        <div className="hidden lg:block w-[250px] sticky top-20 h-fit mt-10">
          {roomTypes.map((room) => (
            <div
              key={room}
              className="relative h-[50px] mb-10"
              onMouseEnter={() => setHoveredRoom(room)}
              onMouseLeave={() => setHoveredRoom(null)}
              onClick={() => setActiveRoom(room)}
            >
              <div
                className={`absolute inset-0 rounded-3xl transition-all duration-300 z-0 ${
                  hoveredRoom === room ? 'bg-[#DDCDC1] opacity-100' : 'opacity-0'
                }`}
              />
              <h1 className="relative z-10 text-center text-[20px] font-bold cursor-pointer gilda-display-regular h-full flex items-center justify-center">
                {room}
              </h1>
            </div>
          ))}
        </div>

        {/* Content section */}
        <div className="lg:ml-20 flex-1">
          {/* Desktop Grid (unchanged) */}
          <div className="hidden lg:flex flex-wrap gap-6">
            {roomData[activeRoom].map((item, index) => (
              <div
                key={`${activeRoom}-${index}`}
                className="w-[290px] h-[330px] rounded-3xl overflow-hidden"
              >
                <Image
                  loading='lazy'
                  width={290}
                  height={330}
                  src={item.image}
                  alt={`${activeRoom} design ${index + 1}`}
                  className="w-full h-full object-cover"
                />
              </div>
            ))}
          </div>

          {/* Mobile Carousel */}
          <div className="lg:hidden relative">
            <div className="relative h-[300px] w-full rounded-2xl overflow-hidden">
              <Image
                src={roomData[activeRoom][currentIndex].image}
                alt={`${activeRoom} design ${currentIndex + 1}`}
                fill
                className="object-cover"
                priority
              />
            </div>
            
            {/* Carousel Controls */}
            <div className="flex justify-between items-center mt-4">
              <button
                onClick={goToPrev}
                className="bg-[#DDCDC1] text-amber-950 px-4 py-2 rounded-full"
              >
                Previous
              </button>
              
              <div className="flex gap-2">
                {roomData[activeRoom].map((_, index) => (
                  <button
                    key={index}
                    onClick={() => {
                      setCurrentIndex(index);
                      setIsAutoPlaying(false);
                    }}
                    className={`w-3 h-3 rounded-full ${
                      index === currentIndex ? 'bg-[#DDCDC1]' : 'bg-gray-300'
                    }`}
                    aria-label={`View ${activeRoom} design ${index + 1}`}
                  />
                ))}
              </div>
              
              <button
                onClick={goToNext}
                className="bg-[#DDCDC1] text-amber-950 px-4 py-2 rounded-full"
              >
                Next
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}


//herosection

"use client"
import { useEffect, useState } from "react";
import Link from 'next/link';
import Image from 'next/image'

export function HeroSection(){
    const [videoSize, setVideoSize] = useState({ width: 800, height: 450 });

    useEffect(() => {
        function handleScroll() {
            const scrollY = window.scrollY;
            const maxScroll = 500;
            const progress = Math.min(scrollY / maxScroll, 1);
            const width = 800 + (1200 - 800) * progress;
            const height = 450 + (675 - 450) * progress;
            setVideoSize({ width, height });
        }
        window.addEventListener("scroll", handleScroll);
        return () => window.removeEventListener("scroll", handleScroll);
    }, []);

    return (
        <div>
            {/* Mobile/Tablet View (hidden on lg) */}
            <div className="lg:hidden h-[600px] sm:h-[700px] mt-22 flex flex-col items-center justify-start pt-12" style={{backgroundColor: '#F1F2F6'}}>
                <div className="w-full max-w-4xl px-4">
                    <h1 className="text-3xl sm:text-4xl font-semibold text-amber-950 text-center tracking-wider gilda-display-regular mb-10">
                        Homes, Uniquely Built
                    </h1>
                    <p className="text-center text-base sm:text-lg font-semibold text-amber-950 mb-9 mt-16">
                        Your Home Deserves More Than Just Design — it deserves the story only your home can tell
                    </p>
                    <div className="flex justify-center">
                        <Link href="/Contact">
                            <div className="w-[150px] h-[45px] bg-[#DDCDC1] text-center pt-2.5 rounded-full gilda-display-regular mt-5">
                                Get Consultation
                            </div>
                        </Link>
                    </div>
                    <div className="w-full flex justify-center mt-20">
                        <video
                            src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//DemoVideo.mp4"
                            className="w-full rounded-2xl shadow-lg"
                            autoPlay
                            muted
                            loop
                            playsInline
                        />
                    </div>
                </div>
            </div>

            {/* Original LG Layout (unchanged) */}
            <div className="hidden lg:block h-[1000px]" style={{backgroundColor: '#F1F2F6'}}>
                <div className="">
                    <div className="text-5xl mt-29 mb-4 font-semibold text-amber-950 text-center tracking-wider pl-8 pt-10 gilda-display-regular">
                        Homes, Uniquely Built
                    </div>
                    <div className="text-center text-[18px] font-semibold text-amber-950 pl-10 pt-2">
                        Your Home Deserves More Than Just Design — it deserves the story only your home can tell
                    </div>
                    <div className="flex justify-center mt-10">
                        <Link href="/Contact">
                            <div className="w-[150px] h-[45px] bg-[#DDCDC1] text-center pt-2.5 rounded-full gilda-display-regular">
                            Get Consultation
                            </div>
                        </Link>
                    </div>

                    <div className="flex justify-center items-start">
                        {/* Left column */}
                        <div className="flex flex-col flex-shrink-0 flex-grow-0 w-[350px]">
                            <div className="w-[350px] h-[200px] ml-20 rounded-2xl relative">
                                <Image 
                                    loading="lazy" 
                                    src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//img1.jpg" 
                                    alt="" 
                                    width={350} 
                                    height={200} 
                                    className="object-cover rounded-2xl"
                                />
                            </div>
                            <div className="w-[150px] h-[170px] rounded-2xl mt-35 ml-40">
                                <Image 
                                    loading="lazy" 
                                    src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//img3.jpg" 
                                    alt="" 
                                    width={150} 
                                    height={170} 
                                    className="object-cover rounded-2xl w-[150px] h-[170px]"
                                />
                            </div>
                        </div>

                        {/* Center column */}
                        <div className="relative flex flex-col items-center justify-start flex-shrink-0 flex-grow-0 w-[800px] min-w-[800px] max-w-[800px]">
                            <div
                                className="-ml-1 rounded-2xl flex items-center justify-center"
                                style={{
                                    position: 'absolute',
                                    left: '50%',
                                    top: '120px',
                                    transform: 'translateX(-50%)',
                                    width: videoSize.width,
                                    height: videoSize.height,
                                    zIndex: 20,
                                    transition: 'width 0.3s, height 0.3s',
                                    boxShadow: '0 8px 32px rgba(0,0,0,0.15)',
                                    pointerEvents: 'none',
                                    maxWidth: 'none',
                                }}
                            >
                                <video
                                    src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//DemoVideo.mp4"
                                    style={{ width: '100%', height: '100%', objectFit: 'cover', borderRadius: '1rem' }}
                                    autoPlay
                                    muted
                                    loop
                                    playsInline
                                />
                            </div>
                        </div>

                        {/* Right column */}
                        <div className="w-[270px] h-[350px] rounded-2xl mr-20 ml-2 flex-shrink-0 flex-grow-0">
                            <Image 
                                loading="lazy" 
                                src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//img2.jpg" 
                                alt="" 
                                width={270} 
                                height={350} 
                                className="object-cover rounded-2xl"
                            />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    )
}





"use client"
import { useEffect, useState } from "react";
import Link from 'next/link';
import Image from 'next/image'

export function HeroSection(){
    const [videoSize, setVideoSize] = useState({ width: 800, height: 450 });

    useEffect(() => {
        function handleScroll() {
            const scrollY = window.scrollY;
            const maxScroll = 500;
            const progress = Math.min(scrollY / maxScroll, 1);
            const width = 800 + (1200 - 800) * progress;
            const height = 450 + (675 - 450) * progress;
            setVideoSize({ width, height });
        }
        window.addEventListener("scroll", handleScroll);
        return () => window.removeEventListener("scroll", handleScroll);
    }, []);

    return (
        <div>
            {/* Mobile/Tablet View (hidden on lg) */}
            <div className="lg:hidden h-[600px] sm:h-[700px] mt-22 flex flex-col items-center justify-start pt-12" style={{backgroundColor: '#F1F2F6'}}>
                <div className="w-full max-w-4xl px-4">
                    <h1 className="text-3xl sm:text-4xl font-semibold text-amber-950 text-center tracking-wider gilda-display-regular mb-10">
                        Homes, Uniquely Built
                    </h1>
                    <p className="text-center text-base sm:text-lg font-semibold text-amber-950 mb-9 mt-16">
                        Your Home Deserves More Than Just Design — it deserves the story only your home can tell
                    </p>
                    <div className="flex justify-center">
                        <Link href="/Contact">
                            <div className="w-[150px] h-[45px] bg-[#DDCDC1] text-center pt-2.5 rounded-full gilda-display-regular mt-5">
                                Get Consultation
                            </div>
                        </Link>
                    </div>
                    <div className="w-full flex justify-center mt-20">
                        <video
                            src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//DemoVideo.mp4"
                            className="w-full rounded-2xl shadow-lg"
                            autoPlay
                            muted
                            loop
                            playsInline
                        />
                    </div>
                </div>
            </div>

            {/* Original LG Layout (unchanged) */}
            <div className="hidden lg:block h-[1000px]" style={{backgroundColor: '#F1F2F6'}}>
                <div className="">
                    <div className="text-5xl mt-29 mb-4 font-semibold text-amber-950 text-center tracking-wider pl-8 pt-10 gilda-display-regular">
                        Homes, Uniquely Built
                    </div>
                    <div className="text-center text-[18px] font-semibold text-amber-950 pl-10 pt-2">
                        Your Home Deserves More Than Just Design — it deserves the story only your home can tell
                    </div>
                    <div className="flex justify-center mt-10">
                        <Link href="/Contact">
                            <div className="w-[150px] h-[45px] bg-[#DDCDC1] text-center pt-2.5 rounded-full gilda-display-regular">
                            Get Consultation
                            </div>
                        </Link>
                    </div>

                    <div className="flex justify-center items-start">
                        {/* Left column */}
                        <div className="flex flex-col flex-shrink-0 flex-grow-0 w-[350px]">
                            <div className="w-[350px] h-[200px] ml-20 rounded-2xl relative">
                                <Image 
                                    loading="lazy" 
                                    src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//img1.jpg" 
                                    alt="" 
                                    width={350} 
                                    height={200} 
                                    className="object-cover rounded-2xl"
                                />
                            </div>
                            <div className="w-[150px] h-[170px] rounded-2xl mt-35 ml-40">
                                <Image 
                                    loading="lazy" 
                                    src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//img3.jpg" 
                                    alt="" 
                                    width={150} 
                                    height={170} 
                                    className="object-cover rounded-2xl w-[150px] h-[170px]"
                                />
                            </div>
                        </div>

                        {/* Center column */}
                        <div className="relative flex flex-col items-center justify-start flex-shrink-0 flex-grow-0 w-[800px] min-w-[800px] max-w-[800px]">
                            <div
                                className="-ml-1 rounded-2xl flex items-center justify-center"
                                style={{
                                    position: 'absolute',
                                    left: '50%',
                                    top: '120px',
                                    transform: 'translateX(-50%)',
                                    width: videoSize.width,
                                    height: videoSize.height,
                                    zIndex: 20,
                                    transition: 'width 0.3s, height 0.3s',
                                    boxShadow: '0 8px 32px rgba(0,0,0,0.15)',
                                    pointerEvents: 'none',
                                    maxWidth: 'none',
                                }}
                            >
                                <video
                                    src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//DemoVideo.mp4"
                                    style={{ width: '100%', height: '100%', objectFit: 'cover', borderRadius: '1rem' }}
                                    autoPlay
                                    muted
                                    loop
                                    playsInline
                                />
                            </div>
                        </div>

                        {/* Right column */}
                        <div className="w-[270px] h-[350px] rounded-2xl mr-20 ml-2 flex-shrink-0 flex-grow-0">
                            <Image 
                                loading="lazy" 
                                src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//img2.jpg" 
                                alt="" 
                                width={270} 
                                height={350} 
                                className="object-cover rounded-2xl"
                            />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    )
}





///corosal 

'use client';
import { useState, useEffect, JSX } from 'react';
import { useSwipeable } from 'react-swipeable';

export function Featurespro() {
  const [currentIndex, setCurrentIndex] = useState(0);
  const [isAutoPlaying, setIsAutoPlaying] = useState(true);
  const [windowWidth, setWindowWidth] = useState(0);

  useEffect(() => {
    const handleResize = () => {
      setWindowWidth(window.innerWidth);
    };
    
    handleResize();
    window.addEventListener('resize', handleResize);
    return () => window.removeEventListener('resize', handleResize);
  }, []);

  useEffect(() => {
    if (windowWidth >= 1024) return;
    if (!isAutoPlaying) return;
    
    const interval = setInterval(() => {
      setCurrentIndex((prev) => (prev + 1) % features.length);
    }, 3000);
    
    return () => clearInterval(interval);
  }, [windowWidth, isAutoPlaying]);

  const features = [
    {
      title: "10-Years Warranty",
      description: "Every material we use and every detail we craft comes backed with a 10-year warranty — because timeless interiors deserve timeless trust.",
      icon: (
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" className="size-8 sm:size-10 md:size-12 fill-[#DDCDC1] flex-shrink-0 ml-4">
          <path fillRule="evenodd" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25ZM12.75 6a.75.75 0 0 0-1.5 0v6c0 .414.336.75.75.75h4.5a.75.75 0 0 0 0-1.5h-3.75V6Z" clipRule="evenodd" />
        </svg>
      )
    },
    {
      title: "0% EMI",
      description: "Bring home the interiors you love with our 0% interest EMI plans — flexible, stress-free, and designed around your comfort.",
      icon: (
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" className="size-8 sm:size-10 md:size-12 fill-[#DDCDC1] flex-shrink-0 ml-4">
          <path fillRule="evenodd" d="M11.99 2.243a4.49 4.49 0 0 0-3.398 1.55 4.49 4.49 0 0 0-3.497 1.306 4.491 4.491 0 0 0-1.307 3.498 4.491 4.491 0 0 0-1.548 3.397c0 1.357.6 2.573 1.548 3.397a4.491 4.491 0 0 0 1.307 3.498 4.49 4.49 0 0 0 3.498 1.307 4.49 4.49 0 0 0 3.397 1.549 4.49 4.49 0 0 0 3.397-1.549 4.49 4.49 0 0 0 3.497-1.307 4.491 4.491 0 0 0 1.306-3.497 4.491 4.491 0 0 0 1.55-3.398c0-1.357-.601-2.573-1.549-3.397a4.491 4.491 0 0 0-1.307-3.498 4.49 4.49 0 0 0-3.498-1.307 4.49 4.49 0 0 0-3.396-1.549Zm3.53 7.28a.75.75 0 0 0-1.06-1.06l-6 6a.75.75 0 1 0 1.06 1.06l6-6Zm-5.78-.905a1.125 1.125 0 1 0 0 2.25 1.125 1.125 0 0 0 0-2.25Zm4.5 4.5a1.125 1.125 0 1 0 0 2.25 1.125 1.125 0 0 0 0-2.25Z" clipRule="evenodd" />
        </svg>
      )
    },
    {
      title: "Factory Finish Interiors",
      description: "Enjoy flawless factory-finish interiors with premium craftsmanship, seamless edges, and unmatched detailing — all tailored to your home.",
      icon: (
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" className="size-8 sm:size-10 md:size-12 fill-[#DDCDC1] flex-shrink-0 ml-4">
          <path fillRule="evenodd" d="M12.516 2.17a.75.75 0 0 0-1.032 0 11.209 11.209 0 0 1-7.877 3.08.75.75 0 0 0-.722.515A12.74 12.74 0 0 0 2.25 9.75c0 5.942 4.064 10.933 9.563 12.348a.749.749 0 0 0 .374 0c5.499-1.415 9.563-6.406 9.563-12.348 0-1.39-.223-2.73-.635-3.985a.75.75 0 0 0-.722-.516l-.143.001c-2.996 0-5.717-1.17-7.734-3.08Zm3.094 8.016a.75.75 0 1 0-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 0 0-1.06 1.06l2.25 2.25a.75.75 0 0 0 1.14-.094l3.75-5.25Z" clipRule="evenodd" />
        </svg>
      )
    },
    {
      title: "34 Days Delivery",
      description: "Experience thoughtfully designed spaces with our fast-track delivery promise — without compromising on quality, detail, or elegance.",
      icon: (
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" className="size-8 sm:size-10 md:size-12 fill-[#DDCDC1] flex-shrink-0 ml-4">
          <path fillRule="evenodd" d="M12 6.75a5.25 5.25 0 0 1 6.775-5.025.75.75 0 0 1 .313 1.248l-3.32 3.319c.063.475.276.934.641 1.299.365.365.824.578 1.3.64l3.318-3.319a.75.75 0 0 1 1.248.313 5.25 5.25 0 0 1-5.472 6.756c-1.018-.086-1.87.1-2.309.634L7.344 21.3A3.298 3.298 0 1 1 2.7 16.657l8.684-7.151c.533-.44.72-1.291.634-2.309A5.342 5.342 0 0 1 12 6.75ZM4.117 19.125a.75.75 0 0 1 .75-.75h.008a.75.75 0 0 1 .75.75v.008a.75.75 0 0 1-.75.75h-.008a.75.75 0 0 1-.75-.75v-.008Z" clipRule="evenodd" />
          <path d="m10.076 8.64-2.201-2.2V4.874a.75.75 0 0 0-.364-.643l-3.75-2.25a.75.75 0 0 0-.916.113l-.75.75a.75.75 0 0 0-.113.916l2.25 3.75a.75.75 0 0 0 .643.364h1.564l2.062 2.062 1.575-1.297Z" />
          <path fillRule="evenodd" d="m12.556 17.329 4.183 4.182a3.375 3.375 0 0 0 4.773-4.773l-3.306-3.305a6.803 6.803 0 0 1-1.53.043c-.394-.034-.682-.006-.867.042a.589.589 0 0 0-.167.063l-3.086 3.748Zm3.414-1.36a.75.75 0 0 1 1.06 0l1.875 1.876a.75.75 0 1 1-1.06 1.06L15.97 17.03a.75.75 0 0 1 0-1.06Z" clipRule="evenodd" />
        </svg>
      )
    }
  ];

  const swipeHandlers = useSwipeable({
    onSwipedLeft: () => {
      setIsAutoPlaying(false);
      setCurrentIndex((prev) => (prev + 1) % features.length);
    },
    onSwipedRight: () => {
      setIsAutoPlaying(false);
      setCurrentIndex((prev) => (prev - 1 + features.length) % features.length);
    },
    preventScrollOnSwipe: true,
    trackMouse: false
  });

  const goToNext = () => {
    setIsAutoPlaying(false);
    setCurrentIndex((prev) => (prev + 1) % features.length);
  };

  const goToPrev = () => {
    setIsAutoPlaying(false);
    setCurrentIndex((prev) => (prev - 1 + features.length) % features.length);
  };

  const FeatureCard = ({ title, description, icon }: { title: string; description: string; icon: JSX.Element }) => (
    <div className="border-2 border-[#DDCDC1] w-full h-full min-h-[200px] sm:min-h-[220px] md:min-h-[250px] rounded-3xl p-5 sm:p-6 md:p-8 hover:shadow-lg transition-all duration-300">
      <div className="flex justify-between items-start h-full">
        <div className="flex flex-col h-full justify-between">
          <div className="text-xl sm:text-2xl md:text-3xl font-medium mb-4 sm:mb-6 gilda-display-regular text-amber-950">{title}</div>
          <p className="tracking-wider text-sm sm:text-base md:text-lg font-medium">{description}</p>
        </div>
        {icon}
      </div>
    </div>
  );

  return (
    <div className="min-h-[600px] md:min-h-[800px] py-12 px-4 sm:px-6 lg:px-8 xl:px-20">
      <h1 className="text-2xl sm:text-3xl lg:text-4xl text-center lg:text-center gilda-display-regular mb-10 sm:mb-12 lg:mb-16 xl:mb-20 text-amber-950">
        Why Choose HUB Interiors?
      </h1>

      {/* Desktop Grid View */}
      <div className="hidden lg:grid grid-cols-1 lg:grid-cols-2 gap-6 lg:gap-8 max-w-[1800px] mx-auto">
        {features.map((feature, index) => (
          <FeatureCard key={index} {...feature} />
        ))}
      </div>

      {/* Mobile Carousel View */}
      <div className="lg:hidden" {...swipeHandlers}>
        <div className="relative overflow-hidden">
          <div className="flex transition-transform duration-300" style={{ transform: `translateX(-${currentIndex * 100}%)` }}>
            {features.map((feature, index) => (
              <div key={index} className="w-full flex-shrink-0 px-2">
                <FeatureCard {...feature} />
              </div>
            ))}
          </div>
        </div>

        {/* Navigation Arrows */}
        <div className="flex justify-center mt-6 space-x-4">
          <button 
            onClick={goToPrev}
            className="p-2 rounded-full bg-[#DDCDC1] hover:bg-[#c9b9ad] transition-colors"
            aria-label="Previous feature"
          >
            <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
              <path fillRule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clipRule="evenodd" />
            </svg>
          </button>
          <div className="flex items-center space-x-2">
            {features.map((_, index) => (
              <button
                key={index}
                onClick={() => {
                  setCurrentIndex(index);
                  setIsAutoPlaying(false);
                }}
                className={`w-3 h-3 rounded-full transition-all ${
                  currentIndex === index ? 'bg-[#DDCDC1] w-6' : 'bg-gray-300'
                }`}
                aria-label={`Go to feature ${index + 1}`}
              />
            ))}
          </div>
          <button 
            onClick={goToNext}
            className="p-2 rounded-full bg-[#DDCDC1] hover:bg-[#c9b9ad] transition-colors"
            aria-label="Next feature"
          >
            <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
              <path fillRule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clipRule="evenodd" />
            </svg>
          </button>
        </div>
      </div>
    </div>
  );
}


////herosection



"use client"
import { useEffect, useState } from "react";
import Link from 'next/link';
import Image from 'next/image'

export function HeroSection(){
    const [videoSize, setVideoSize] = useState({ width: 800, height: 450 });

    useEffect(() => {
        function handleScroll() {
            const scrollY = window.scrollY;
            const maxScroll = 500;
            const progress = Math.min(scrollY / maxScroll, 1);
            const width = 800 + (1200 - 800) * progress;
            const height = 450 + (675 - 450) * progress;
            setVideoSize({ width, height });
        }
        window.addEventListener("scroll", handleScroll);
        return () => window.removeEventListener("scroll", handleScroll);
    }, []);

    return (
        <div>
            {/* Mobile/Tablet View (hidden on lg) */}
            <div className="lg:hidden h-[600px] sm:h-[700px] mt-22 flex flex-col items-center justify-start pt-12" style={{backgroundColor: '#F1F2F6'}}>
                <div className="w-full max-w-4xl px-4">
                    <h1 className="text-3xl sm:text-4xl font-semibold text-amber-950 text-center tracking-wider gilda-display-regular mb-10">
                        Homes, Uniquely Built
                    </h1>
                    <p className="text-center text-base sm:text-lg font-semibold text-amber-950 mb-9 mt-16">
                        Your Home Deserves More Than Just Design — it deserves the story only your home can tell
                    </p>
                    <div className="flex justify-center">
                        <Link href="/Contact">
                            <div className="w-[150px] h-[45px] bg-[#DDCDC1] text-center pt-2.5 rounded-full gilda-display-regular mt-5">
                                Get Consultation
                            </div>
                        </Link>
                    </div>
                    <div className="w-full flex justify-center mt-20">
                        <video
                            src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//DemoVideo.mp4"
                            className="w-full rounded-2xl shadow-lg"
                            autoPlay
                            muted
                            loop
                            playsInline
                        />
                    </div>
                </div>
            </div>

            {/* Original LG Layout (unchanged) */}
            <div className="hidden lg:block h-[1000px]" style={{backgroundColor: '#F1F2F6'}}>
                <div className="">
                    <div className="text-5xl mt-29 mb-4 font-medium text-amber-950 text-center tracking-wider pl-8 pt-10 gilda-display-regular">
                        Homes, Uniquely Built
                    </div>
                    <div className="text-center text-[18px] font-medium text-amber-950 pl-10 pt-2 .manrope-semibold">
                        Your Home Deserves More Than Just Design — it deserves the story only your home can tell
                    </div>
                    <div className="flex justify-center mt-10">
                        <Link href="/Contact">
                            <div className="w-[150px] h-[45px] bg-[#DDCDC1] text-center pt-2.5 rounded-full gilda-display-regular">
                            Get Consultation
                            </div>
                        </Link>
                    </div>

                    <div className="flex justify-center items-start">
                        {/* Left column */}
                        <div className="flex flex-col flex-shrink-0 flex-grow-0 w-[350px]">
                            <div className="w-[350px] h-[200px] ml-20 rounded-2xl relative">
                                <Image 
                                    loading="lazy" 
                                    src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//img1.jpg" 
                                    alt="" 
                                    width={350} 
                                    height={200} 
                                    className="object-cover rounded-2xl"
                                />
                            </div>
                            <div className="w-[150px] h-[170px] rounded-2xl mt-35 ml-40">
                                <Image 
                                    loading="lazy" 
                                    src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//img3.jpg" 
                                    alt="" 
                                    width={150} 
                                    height={170} 
                                    className="object-cover rounded-2xl w-[150px] h-[170px]"
                                />
                            </div>
                        </div>

                        {/* Center column */}
                        <div className="relative flex flex-col items-center justify-start flex-shrink-0 flex-grow-0 w-[800px] min-w-[800px] max-w-[800px]">
                            <div
                                className="-ml-1 rounded-2xl flex items-center justify-center"
                                style={{
                                    position: 'absolute',
                                    left: '50%',
                                    top: '120px',
                                    transform: 'translateX(-50%)',
                                    width: videoSize.width,
                                    height: videoSize.height,
                                    zIndex: 20,
                                    transition: 'width 0.3s, height 0.3s',
                                    boxShadow: '0 8px 32px rgba(0,0,0,0.15)',
                                    pointerEvents: 'none',
                                    maxWidth: 'none',
                                }}
                            >
                                <video
                                    src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//DemoVideo.mp4"
                                    style={{ width: '100%', height: '100%', objectFit: 'cover', borderRadius: '1rem' }}
                                    autoPlay
                                    muted
                                    loop
                                    playsInline
                                />
                            </div>
                        </div>

                        {/* Right column */}
                        <div className="w-[270px] h-[350px] rounded-2xl mr-20 ml-2 flex-shrink-0 flex-grow-0">
                            <Image 
                                loading="lazy" 
                                src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//img2.jpg" 
                                alt="" 
                                width={270} 
                                height={350} 
                                className="object-cover rounded-2xl"
                            />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    )
}




"use client"
import { useEffect, useState } from "react";
import Link from 'next/link';
import Image from 'next/image'

export function HeroSection(){
    const [videoSize, setVideoSize] = useState({ width: 800, height: 450 });

    useEffect(() => {
        function handleScroll() {
            const scrollY = window.scrollY;
            const maxScroll = 500;
            const progress = Math.min(scrollY / maxScroll, 1);
            
            // Responsive video sizing based on screen width
            const screenWidth = window.innerWidth;
            let baseWidth, maxWidth, baseHeight, maxHeight;
            
            if (screenWidth < 1280) { // Smaller screens
                baseWidth = 600;
                maxWidth = 800;
                baseHeight = 338;
                maxHeight = 450;
            } else { // Large screens
                baseWidth = 800;
                maxWidth = 1200;
                baseHeight = 450;
                maxHeight = 675;
            }
            
            const width = baseWidth + (maxWidth - baseWidth) * progress;
            const height = baseHeight + (maxHeight - baseHeight) * progress;
            setVideoSize({ width, height });
        }
        window.addEventListener("scroll", handleScroll);
        return () => window.removeEventListener("scroll", handleScroll);
    }, []);

    return (
        <div>
            {/* Mobile/Tablet View (hidden on lg) */}
            <div className="lg:hidden h-[600px] sm:h-[700px] mt-22 flex flex-col items-center justify-start pt-12" style={{backgroundColor: '#F1F2F6'}}>
                <div className="w-full max-w-4xl px-4">
                    <h1 className="text-3xl sm:text-4xl font-semibold text-amber-950 text-center tracking-wider wulkan-display tracking-wider mb-10">
                        Homes, Uniquely Built
                    </h1>
                    <p className="text-center text-base sm:text-lg font-medium text-amber-950 mb-9 mt-16 manrope">
                        Your Home Deserves More Than Just Design — it deserves the story only your home can tell
                    </p>
                    <div className="flex justify-center">
                        <Link href="/Contact">
                            <div
                                className="manrope w-[150px] h-[45px] bg-[#DDCDC1] flex items-center justify-center rounded-full mt-5 shadow-lg border-b-4 border-[#b8a48c] transition duration-150 active:translate-y-1 active:shadow hover:shadow-2xl cursor-pointer select-none text-base font-medium manrope tracking-tight"
                            >
                                Get Consultation
                            </div>
                        </Link>
                    </div>
                    <div className="w-full flex justify-center mt-20">
                        <video
                            src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//DemoVideo.mp4"
                            className="w-full rounded-2xl shadow-lg"
                            autoPlay
                            muted
                            loop
                            playsInline
                        />
                    </div>
                </div>
            </div>

            {/* Desktop Layout (lg and above) - Responsive sizing */}
            <div className="hidden lg:block h-[1000px] xl:h-[1100px] 2xl:h-[1200px]" style={{backgroundColor: '#F1F2F6'}}>
                <div className="max-w-7xl mx-auto px-4 xl:px-8 2xl:px-12">
                    <div className="wulkan-display text-xl lg:text-5xl xl:text-4xl 2xl:text-7xl mt-16 lg:mt-20 xl:mt-24 mb-4 font-medium text-amber-950 text-center tracking-wider pl-8 pt-10 gilda-display-regular">
                        <span className="manrope">HOMES,</span> uniquely <span className="manrope">BUILT</span>
                    </div>
                    <div className="text-center text-base lg:text-lg xl:text-xl 2xl:text-2xl font-medium text-amber-950 pl-10 pt-2 manrope">
                        Your Home Deserves More Than Just Design — it deserves the story only your home can tell
                    </div>
                    <div className="flex justify-center mt-8 lg:mt-10 xl:mt-12">
                        <Link href="/Contact">
                            <div
                                className="manrope w-[140px] lg:w-[150px] xl:w-[160px] h-[40px] lg:h-[45px] xl:h-[50px] bg-[#DDCDC1] flex items-center justify-center rounded-full shadow-lg border-b-4 border-[#b8a48c] transition duration-150 active:translate-y-1 active:shadow hover:shadow-2xl cursor-pointer select-none text-base font-medium tracking-tight"
                            >
                                Get Consultation
                            </div>
                        </Link>
                    </div>

                    <div className="flex justify-center items-start mt-8 lg:mt-6 xl:mt-8 2xl:mt-10">
                        {/* Left column */}
                        <div className="flex flex-col flex-shrink-0 flex-grow-0 w-[280px] lg:w-[320px] xl:w-[350px] 2xl:w-[400px]">
                            <div className="w-full h-[160px] lg:h-[180px] xl:h-[200px] 2xl:h-[220px] ml-8 lg:ml-12 xl:ml-16 2xl:ml-20 rounded-2xl relative shadow-2xl hover:shadow-3xl transition hover:-translate-y-1">
                                <Image 
                                    loading="lazy" 
                                    src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//img1.jpg" 
                                    alt="" 
                                    width={400} 
                                    height={220} 
                                    className="object-cover rounded-2xl w-full h-full"
                                />
                            </div>
                            <div className="w-[120px] lg:w-[130px] xl:w-[150px] 2xl:w-[160px] h-[120px] lg:h-[140px] xl:h-[170px] 2xl:h-[180px] rounded-2xl mt-16 lg:mt-20 xl:mt-24 2xl:mt-28 ml-20 lg:ml-24 xl:ml-28 2xl:ml-32 shadow-2xl hover:shadow-3xl transition hover:-translate-y-1">
                                <Image 
                                    loading="lazy" 
                                    src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//img3.jpg" 
                                    alt="" 
                                    width={160} 
                                    height={180} 
                                    className="object-cover rounded-2xl w-full h-full"
                                />
                            </div>
                        </div>

                        {/* Center column */}
                        <div className="relative flex flex-col items-center justify-start flex-shrink-0 flex-grow-0 w-[600px] lg:w-[700px] xl:w-[800px] 2xl:w-[900px] min-w-0">
                            <div
                                className="-ml-1 rounded-2xl flex items-center justify-center"
                                style={{
                                    position: 'absolute',
                                    left: '50%',
                                    top: '100px',
                                    transform: 'translateX(-50%)',
                                    width: videoSize.width,
                                    height: videoSize.height,
                                    zIndex: 20,
                                    transition: 'width 0.3s, height 0.3s',
                                    boxShadow: '0 8px 32px rgba(0,0,0,0.15)',
                                    pointerEvents: 'none',
                                    maxWidth: 'none',
                                }}
                            >
                                <video
                                    src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//DemoVideo.mp4"
                                    style={{ width: '100%', height: '100%', objectFit: 'cover', borderRadius: '1rem' }}
                                    autoPlay
                                    muted
                                    loop
                                    playsInline
                                />
                            </div>
                        </div>

                        {/* Right column */}
                        <div className="w-[200px] lg:w-[220px] xl:w-[270px] 2xl:w-[300px] h-[250px] lg:h-[280px] xl:h-[350px] 2xl:h-[380px] rounded-2xl mr-8 lg:mr-12 xl:mr-16 2xl:mr-20 ml-2 lg:ml-6 xl:ml-4 flex-shrink-0 flex-grow-0 shadow-2xl hover:shadow-3xl transition hover:-translate-y-1">
                            <Image 
                                loading="lazy" 
                                src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//img2.jpg" 
                                alt="" 
                                width={300} 
                                height={380} 
                                className="object-cover rounded-2xl w-full h-full"
                            />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    )

}


"use client";
import { useState, useEffect } from "react";
import Image from "next/image";
import { useSwipeable } from "react-swipeable";

type RoomType =
  | "Living Room"
  | "Kitchen Room"
  | "Bed Room"
  | "Kids Room"
  | "Devotional Room";

interface RoomItem {
  image: string;
}

export function Form() {
  const [activeRoom, setActiveRoom] = useState<RoomType>("Living Room");
  const [hoveredRoom, setHoveredRoom] = useState<RoomType | null>(null);
  const [currentIndex, setCurrentIndex] = useState(0);
  const [isAutoPlaying, setIsAutoPlaying] = useState(true);

  const roomData: Record<RoomType, RoomItem[]> = {
    "Living Room": [
      { image: "https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4/img1.jpg" },
      { image: "https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4/img2.jpg" },
      { image: "https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4/img3.jpg" },
      { image: "https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4/img4.jpg" },
      { image: "https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4/img5.jpg" },
      { image: "https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4/img6.jpg" }
    ],
    "Kitchen Room": [ { image: "/kitchen1.jpg" }, { image: "/kitchen2.jpg" }, { image: "/kitchen3.jpg" }, { image: "/kitchen4.jpg" }, { image: "/kitchen5.jpg" }, { image: "/kitchen6.jpg" } ],
    "Bed Room": [ { image: "/bed1.jpg" }, { image: "/bed2.jpg" }, { image: "/bed3.jpg" }, { image: "/bed4.jpg" }, { image: "/bed5.jpg" }, { image: "/bed6.jpg" } ],
    "Kids Room": [ { image: "/kids1.jpg" }, { image: "/kids2.jpg" }, { image: "/kids3.jpg" }, { image: "/kids4.jpg" }, { image: "/kids5.jpg" }, { image: "/kids6.jpg" } ],
    "Devotional Room": [ { image: "/pooja1.jpg" }, { image: "/pooja2.jpg" }, { image: "/pooja3.jpg" }, { image: "/pooja4.jpg" }, { image: "/pooja5.jpg" }, { image: "/pooja6.jpg" } ]
  };

  const roomTypes = Object.keys(roomData) as RoomType[];

  useEffect(() => {
    if (typeof window === "undefined" || window.innerWidth >= 1024) return;
    if (!isAutoPlaying) return;
    const interval = setInterval(() => {
      setCurrentIndex((prev) => (prev + 1) % roomData[activeRoom].length);
    }, 3000);
    return () => clearInterval(interval);
  }, [activeRoom, isAutoPlaying]);

  const goToNext = () => {
    setIsAutoPlaying(false);
    setCurrentIndex((prev) => (prev + 1) % roomData[activeRoom].length);
  };

  const goToPrev = () => {
    setIsAutoPlaying(false);
    setCurrentIndex(
      (prev) => (prev - 1 + roomData[activeRoom].length) % roomData[activeRoom].length
    );
  };

  const swipeHandlers = useSwipeable({
    onSwipedLeft: goToNext,
    onSwipedRight: goToPrev,
    preventScrollOnSwipe: true,
    trackMouse: false
  });

  return (
    <div className="w-full bg-[#F1F2F6] py-35 px-6 sm:px-6 lg:px-12">
      <div className="max-w-[1440px] mx-auto">
        <h1 className="wulkan-display-bold text-2xl md:text-3xl lg:text-[40px] text-amber-950 lg:ml-16 tracking-wider lg:mb-25 mb-10  lg:text-left">
          Every space has a story, start yours here
        </h1>

        <div className="flex flex-col lg:flex-row gap-10 manrope ">
          {/* Sidebar (Desktop) */}
          <div className="hidden lg:flex flex-col w-[240px] flex-shrink-0 sticky top-20 self-start">
            {roomTypes.map((room) => (
              <div
                key={room}
                className="relative h-[50px] mb-6 cursor-pointer"
                onMouseEnter={() => setHoveredRoom(room)}
                onMouseLeave={() => setHoveredRoom(null)}
                onClick={() => setActiveRoom(room)}
              >
                <div
                  className={`absolute inset-0 rounded-3xl transition-all duration-300 z-0 ${
                    hoveredRoom === room ? "bg-[#DDCDC1] opacity-100 w-[190px] ml-14 " : "opacity-0"
                  }`}
                />
                <h1 className="manrope-semibold relative z-10 text-left text-lg h-full flex items-center pl-18">
                  {room}
                </h1>
              </div>
            ))}
          </div>

          {/* Tabs (Mobile) */}
          <div className="lg:hidden mb-6 flex overflow-x-auto gap-3 hide-scrollbar">
            {roomTypes.map((room) => (
              <button
                key={room}
                onClick={() => {
                  setActiveRoom(room);
                  setCurrentIndex(0);
                  setIsAutoPlaying(true);
                }}
                className={`px-4 py-2 rounded-full whitespace-nowrap ${
                  activeRoom === room
                    ? "bg-[#DDCDC1] text-amber-950 .manrope-semibold"
                    : "bg-white text-gray-700 .manrope-semibold"
                }`}
              >
                {room}
              </button>
            ))}
          </div>

          {/* Image Grid (Desktop) */}
          <div className="hidden lg:flex flex-wrap gap-6 flex-1 justify-center">
            {roomData[activeRoom].map((item, index) => (
              <div
                key={`${activeRoom}-${index}`}
                className="w-[280px] h-[320px] rounded-2xl overflow-hidden shadow-md"
              >
                <Image
                  src={item.image}
                  alt={`${activeRoom} design ${index + 1}`}
                  width={280}
                  height={320}
                  className="object-cover w-full h-full"
                  loading="lazy"
                />
              </div>
            ))}
          </div>

          {/* Swipe Carousel (Mobile) */}
          <div className="lg:hidden relative" {...swipeHandlers}>
            <div className="relative h-[300px] w-full rounded-2xl overflow-hidden">
              <Image
                src={roomData[activeRoom][currentIndex].image}
                alt={`${activeRoom} design ${currentIndex + 1}`}
                fill
                className="object-cover"
                priority
              />
            </div>

            {/* Controls */}
            <button
              onClick={goToPrev}
              className="absolute top-1/2 left-2 transform -translate-y-1/2 bg-white/70 text-amber-900 p-3 rounded-full shadow-md"
            >
              ◀
            </button>
            <button
              onClick={goToNext}
              className="absolute top-1/2 right-2 transform -translate-y-1/2 bg-white/70 text-amber-900 p-3 rounded-full shadow-md"
            >
              ▶
            </button>

            {/* Indicators */}
            <div className="flex justify-center mt-4 gap-2">
              {roomData[activeRoom].map((_, index) => (
                <button
                  key={index}
                  onClick={() => {
                    setCurrentIndex(index);
                    setIsAutoPlaying(false);
                  }}
                  className={`w-3 h-3 rounded-full ${
                    index === currentIndex ? "bg-[#DDCDC1]" : "bg-gray-300"
                  }`}
                />
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}



"use client"
import { useEffect, useState } from "react";
import Link from 'next/link';
import Image from 'next/image';
import { motion, AnimatePresence } from "framer-motion";

export function HeroSection() {
  const [videoSize, setVideoSize] = useState({ width: 800, height: 450 });
  const [currentFontIndex, setCurrentFontIndex] = useState(0);
  const [showMainTitle, setShowMainTitle] = useState(false);
  const [startFontAnimation, setStartFontAnimation] = useState(false);
  const [showSubtext, setShowSubtext] = useState(false);
  const [showButton, setShowButton] = useState(false);
  const [videoError, setVideoError] = useState(false);

  const fonts = [
    'font-serif italic text-amber-950',
    'font-mono font-bold text-amber-950',
    'font-sans font-extrabold italic text-amber-950',
    'wulkan-display text-amber-950'
  ];

  useEffect(() => {
    let mounted = true;
    const timeouts: NodeJS.Timeout[] = [];

    const runAnimation = async () => {
      try {
        // Step 1: Show main title
        if (mounted) {
          const timeout1 = setTimeout(() => {
            if (mounted) setShowMainTitle(true);
          }, 300);
          timeouts.push(timeout1);
        }

        // Step 2: Start font animation
        if (mounted) {
          const timeout2 = setTimeout(() => {
            if (mounted) setStartFontAnimation(true);
          }, 1200);
          timeouts.push(timeout2);
        }

        // Step 3: Cycle through fonts
        if (mounted) {
          const timeout3 = setTimeout(() => {
            if (!mounted) return;
            
            let fontIndex = 0;
            const fontInterval = setInterval(() => {
              if (!mounted) {
                clearInterval(fontInterval);
                return;
              }
              
              fontIndex++;
              if (fontIndex >= fonts.length) {
                clearInterval(fontInterval);
                
                // Step 4: Show subtext
                const timeout4 = setTimeout(() => {
                  if (mounted) setShowSubtext(true);
                }, 500);
                timeouts.push(timeout4);
                
                // Step 5: Show button
                const timeout5 = setTimeout(() => {
                  if (mounted) setShowButton(true);
                }, 1000);
                timeouts.push(timeout5);
                
                return;
              }
              
              setCurrentFontIndex(fontIndex);
            }, 600);
            
            timeouts.push(fontInterval);
          }, 1300);
          timeouts.push(timeout3);
        }
      } catch (error) {
        console.error('Animation error:', error);
      }
    };

    runAnimation();

    return () => {
      mounted = false;
      timeouts.forEach(timeout => {
        if (typeof timeout === 'number') {
          clearTimeout(timeout);
        } else {
          clearInterval(timeout);
        }
      });
    };
  }, [fonts.length]);

  useEffect(() => {
    let mounted = true;
    
    const handleScroll = () => {
      if (!mounted) return;
      
      try {
        const scrollY = window.scrollY;
        const maxScroll = 500;
        const progress = Math.min(scrollY / maxScroll, 1);
        
        const screenWidth = window.innerWidth;
        let baseWidth, maxWidth, baseHeight, maxHeight;
        
        if (screenWidth < 1280) {
          baseWidth = 600;
          maxWidth = 800;
          baseHeight = 338;
          maxHeight = 450;
        } else {
          baseWidth = 800;
          maxWidth = 1200;
          baseHeight = 450;
          maxHeight = 675;
        }
        
        if (mounted) {
          setVideoSize({
            width: baseWidth + (maxWidth - baseWidth) * progress,
            height: baseHeight + (maxHeight - baseHeight) * progress
          });
        }
      } catch (error) {
        console.error('Scroll handler error:', error);
      }
    };
    
    window.addEventListener("scroll", handleScroll, { passive: true });
    
    return () => {
      mounted = false;
      window.removeEventListener("scroll", handleScroll);
    };
  }, []);

  const handleVideoError = () => {
    setVideoError(true);
  };

  return (
    <div>
      {/* Mobile/Tablet View */}
      <div className="lg:hidden h-[600px] sm:h-[700px] mt-22 flex flex-col items-center justify-start pt-12 bg-[#F1F2F6]">
        <div className="w-full max-w-4xl px-4">
          <div className="relative overflow-hidden">
            <motion.h1 
              initial={{ y: 100, opacity: 0 }}
              animate={showMainTitle ? { y: 0, opacity: 1 } : { y: 100, opacity: 0 }}
              transition={{ duration: 0.8, ease: "easeOut" }}
              className="text-3xl sm:text-4xl font-semibold text-amber-950 text-center tracking-wider wulkan-display mb-10"
            >
              <span className="manrope-semibold">Homes</span>{' '}
              {startFontAnimation ? (
                <AnimatePresence mode="wait">
                  <motion.span
                    key={currentFontIndex}
                    initial={{ opacity: 0, y: -10 }}
                    animate={{ opacity: 1, y: 0 }}
                    exit={{ opacity: 0, y: 10 }}
                    transition={{ duration: 0.4 }}
                    className={`inline-block ${fonts[currentFontIndex]}`}
                  >
                    Uniquely
                  </motion.span>
                </AnimatePresence>
              ) : (
                <span className="wulkan-display text-amber-950">Uniquely</span>
              )}{' '}
              <span className="manrope-semibold">Built</span>
            </motion.h1>
          </div>

          <AnimatePresence>
            {showSubtext && (
              <motion.p 
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: -20 }}
                transition={{ duration: 0.8, ease: "easeOut" }}
                className="text-center text-base sm:text-lg font-medium text-amber-950 mb-9 manrope"
              >
                Your Home Deserves More Than Just Design — it deserves the story only your home can tell
              </motion.p>
            )}
          </AnimatePresence>

          <AnimatePresence>
            {showButton && (
              <motion.div
                initial={{ opacity: 0, scale: 0.8, y: 20 }}
                animate={{ opacity: 1, scale: 1, y: 0 }}
                exit={{ opacity: 0, scale: 0.8, y: -20 }}
                transition={{ duration: 0.6, type: 'spring', stiffness: 100, damping: 20 }}
                className="flex justify-center"
              >
                <Link href="/Contact">
                  <div className="manrope w-[150px] h-[45px] bg-[#DDCDC1] flex items-center justify-center rounded-full mt-5 shadow-lg border-b-4 border-[#b8a48c] transition duration-150 active:translate-y-1 active:shadow hover:shadow-2xl cursor-pointer select-none text-base font-medium tracking-tight">
                    Get Consultation
                  </div>
                </Link>
              </motion.div>
            )}
          </AnimatePresence>

          <div className="w-full flex justify-center mt-20">
            {videoError ? (
              <div className="w-full h-[200px] bg-gray-200 rounded-2xl flex items-center justify-center">
                <p>Video preview unavailable</p>
              </div>
            ) : (
              <video
                src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//DemoVideo.mp4"
                className="w-full rounded-2xl shadow-lg"
                autoPlay
                muted
                loop
                playsInline
                onError={handleVideoError}
                preload="metadata"
              />
            )}
          </div>
        </div>
      </div>

      {/* Desktop View */}
      <div className="hidden lg:block h-[1000px] xl:h-[1100px] 2xl:h-[1200px] bg-[#F1F2F6]">
        <div className="max-w-7xl mx-auto px-4 xl:px-8 2xl:px-12">
          <div className="relative overflow-hidden">
            <motion.div 
              initial={{ y: 150, opacity: 0 }}
              animate={showMainTitle ? { y: 0, opacity: 1 } : { y: 150, opacity: 0 }}
              transition={{ duration: 1, ease: "easeOut" }}
              className="wulkan-display text-xl lg:text-[45px] xl:text-[50px] 2xl:text-7xl mt-16 lg:mt-20 xl:mt-15 mb-4 font-light text-amber-950 text-center pl-8 pt-15"
            >
              <span className="manrope text-[40px]">HOMES</span>{' '}
              {startFontAnimation ? (
                <AnimatePresence mode="wait">
                  <motion.span
                    key={currentFontIndex}
                    initial={{ opacity: 0, y: -20 }}
                    animate={{ opacity: 1, y: 0 }}
                    exit={{ opacity: 0, y: 20 }}
                    transition={{ duration: 0.4 }}
                    className={`inline-block ${fonts[currentFontIndex]}`}
                  >
                    uniquely
                  </motion.span>
                </AnimatePresence>
              ) : (
                <span className="wulkan-display text-amber-950">uniquely</span>
              )}{' '}
              <span className="manrope text-[40px]">BUILT</span>
            </motion.div>
          </div>

          <AnimatePresence>
            {showSubtext && (
              <motion.div
                initial={{ opacity: 0, y: 30 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: -30 }}
                transition={{ duration: 0.8, ease: "easeOut" }}
                className="text-center text-base lg:text-lg xl:text-xl 2xl:text-2xl manrope-medium text-amber-950 pl-10 pt-[4px] "
              >
                Your Home Deserves More Than Just Design — it deserves the story only your home can tell
              </motion.div>
            )}
          </AnimatePresence>

          <AnimatePresence>
            {showButton && (
              <motion.div
                initial={{ opacity: 0, scale: 0.8, y: 30 }}
                animate={{ opacity: 1, scale: 1, y: 0 }}
                exit={{ opacity: 0, scale: 0.8, y: -30 }}
                transition={{ duration: 0.6, type: 'spring', stiffness: 100, damping: 20 }}
                className="flex justify-center mt-8 lg:mt-10 xl:mt-8"
              >
                <Link href="/Contact">
                  <div className="w-[140px] lg:w-[200px] xl:w-[200px] h-[40px] lg:h-[45px] xl:h-[50px] bg-[#DDCDC1] flex items-center justify-center rounded-full shadow-lg border-b-4 border-[#b8a48c] transition duration-150 active:translate-y-1 active:shadow hover:shadow-2xl cursor-pointer select-none text-base font-medium tracking-tight">
                    Get Consultation
                  </div>
                </Link>
              </motion.div>
            )}
          </AnimatePresence>

          {/* Rest of desktop layout */}
          <div className="flex justify-center items-start mt-8 lg:mt-6 xl:mt-8 2xl:mt-10">
            {/* Left column */}
            <div className="flex flex-col flex-shrink-0 flex-grow-0 w-[280px] lg:w-[320px] xl:w-[350px] 2xl:w-[400px]">
              <Image 
                loading="eager"
                src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//img1.jpg" 
                alt="Home design example" 
                width={400} 
                height={220} 
                className="w-full h-[160px] lg:h-[180px] xl:h-[200px] 2xl:h-[220px] ml-8 lg:ml-12 xl:ml-16 2xl:ml-20 rounded-2xl shadow-2xl hover:shadow-3xl transition hover:-translate-y-1 object-cover"
              />
              <Image 
                loading="eager"
                src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//img3.jpg" 
                alt="Interior design detail" 
                width={160} 
                height={180} 
                className="w-[120px] lg:w-[130px] xl:w-[150px] 2xl:w-[160px] h-[120px] lg:h-[140px] xl:h-[170px] 2xl:h-[180px] rounded-2xl mt-16 lg:mt-20 xl:mt-24 2xl:mt-28 ml-20 lg:ml-24 xl:ml-28 2xl:ml-32 shadow-2xl hover:shadow-3xl transition hover:-translate-y-1 object-cover"
              />
            </div>

            {/* Center column */}
            <div className="relative flex flex-col items-center justify-start flex-shrink-0 flex-grow-0 w-[600px] lg:w-[700px] xl:w-[800px] 2xl:w-[900px] min-w-0">
              {videoError ? (
                <div 
                  className="absolute left-1/2 top-[100px] -translate-x-1/2 bg-gray-200 rounded-2xl flex items-center justify-center"
                  style={{
                    width: videoSize.width,
                    height: videoSize.height,
                    zIndex: 20,
                    boxShadow: '0 8px 32px rgba(0,0,0,0.15)'
                  }}
                >
                  <p>Video unavailable</p>
                </div>
              ) : (
                <div
                  className="-ml-1 rounded-2xl flex items-center justify-center"
                  style={{
                    position: 'absolute',
                    left: '50%',
                    top: '100px',
                    transform: 'translateX(-50%)',
                    width: videoSize.width,
                    height: videoSize.height,
                    zIndex: 20,
                    transition: 'width 0.3s ease, height 0.3s ease',
                    boxShadow: '0 8px 32px rgba(0,0,0,0.15)',
                    pointerEvents: 'none',
                    maxWidth: 'none',
                  }}
                >
                  <video
                    src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//DemoVideo.mp4"
                    style={{ width: '100%', height: '100%', objectFit: 'cover', borderRadius: '1rem' }}
                    autoPlay
                    muted
                    loop
                    playsInline
                    onError={handleVideoError}
                    preload="metadata"
                  />
                </div>
              )}
            </div>

            <Image 
              loading="eager"
              src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//img2.jpg" 
              alt="Architectural design" 
              width={300} 
              height={380} 
              className="w-[200px] lg:w-[220px] xl:w-[270px] 2xl:w-[300px] h-[250px] lg:h-[280px] xl:h-[350px] 2xl:h-[380px] rounded-2xl mr-8 lg:mr-12 xl:mr-16 2xl:mr-20 ml-2 lg:ml-6 xl:ml-4 flex-shrink-0 flex-grow-0 shadow-2xl hover:shadow-3xl transition hover:-translate-y-1 object-cover"
            />
          </div>
        </div>
      </div>
    </div>
  );
}


/////////


"use client";
import { useEffect, useState } from "react";
import Link from 'next/link';
import Image from 'next/image';
import { motion, AnimatePresence } from "framer-motion";

export function HeroSection() {
  const [currentFontIndex, setCurrentFontIndex] = useState(0);
  const [showMainTitle, setShowMainTitle] = useState(false);
  const [startFontAnimation, setStartFontAnimation] = useState(false);
  const [showSubtext, setShowSubtext] = useState(false);
  const [showButton, setShowButton] = useState(false);
  const [videoError, setVideoError] = useState(false);

  const fonts = [
    'font-serif italic text-amber-950',
    'font-mono font-bold text-amber-950',
    'font-sans font-extrabold italic text-amber-950',
    'wulkan-display text-amber-950'
  ];

  useEffect(() => {
    const timeouts: NodeJS.Timeout[] = [];
    setShowMainTitle(true);

    const timeout1 = setTimeout(() => setStartFontAnimation(true), 1000);
    timeouts.push(timeout1);

    const timeout2 = setTimeout(() => {
      let i = 0;
      const interval = setInterval(() => {
        i++;
        if (i < fonts.length) {
          setCurrentFontIndex(i);
        } else {
          clearInterval(interval);
        }
      }, 500);
      timeouts.push(interval);
    }, 1500);
    timeouts.push(timeout2);

    return () => {
      timeouts.forEach(clearTimeout);
    };
  }, []);

  // Show rest on scroll
  useEffect(() => {
    const handleScroll = () => {
      const scrollY = window.scrollY;
      if (scrollY > 100) {
        setShowSubtext(true);
        setShowButton(true);
      }
    };
    window.addEventListener("scroll", handleScroll, { passive: true });
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  const handleVideoError = () => setVideoError(true);

  return (
    <div className="bg-[#F1F2F6] overflow-hidden">
      <div className="min-h-[100vh] flex flex-col items-center justify-center pt-24">
        <motion.h1
          initial={{ y: 100, opacity: 0 }}
          animate={showMainTitle ? { y: 0, opacity: 1 } : {}}
          transition={{ duration: 1 }}
          className="text-4xl sm:text-5xl text-center font-light wulkan-display text-amber-950"
        >
          <span className="manrope font-bold">Homes</span>{" "}
          {startFontAnimation ? (
            <AnimatePresence mode="wait">
              <motion.span
                key={currentFontIndex}
                initial={{ opacity: 0, y: -10 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: 10 }}
                transition={{ duration: 0.4 }}
                className={`inline-block ${fonts[currentFontIndex]}`}
              >
                Uniquely
              </motion.span>
            </AnimatePresence>
          ) : (
            <span className="wulkan-display text-amber-950">Uniquely</span>
          )}{" "}
          <span className="manrope font-bold">Built</span>
        </motion.h1>

        {/* Subtext */}
        {showSubtext && (
          <motion.p
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.1, duration: 0.6 }}
            className="mt-6 text-center text-lg text-amber-950/90 max-w-xl manrope-medium"
          >
            Your Home Deserves More Than Just Design — it deserves the story only your home can tell
          </motion.p>
        )}

        {/* Button */}
        {showButton && (
          <motion.div
            initial={{ opacity: 0, scale: 0.9 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ delay: 0.2, duration: 0.5 }}
            className="mt-6"
          >
            <Link href="/Contact">
              <div className="w-[160px] h-[45px] bg-[#DDCDC1] flex items-center justify-center rounded-full shadow-md border-b-4 border-[#b8a48c] transition duration-150 active:translate-y-1 hover:shadow-xl cursor-pointer text-base font-medium tracking-tight">
                Get Consultation
              </div>
            </Link>
          </motion.div>
        )}

        {/* Video */}
        {showSubtext && (
          <motion.div
            initial={{ opacity: 0, y: 40 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.3, duration: 0.6 }}
            className="mt-12 w-full max-w-3xl px-4"
          >
            {videoError ? (
              <div className="w-full h-[220px] bg-gray-300 rounded-xl flex items-center justify-center">
                <p>Video preview unavailable</p>
              </div>
            ) : (
              <video
                src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//DemoVideo.mp4"
                className="w-full rounded-xl shadow-lg"
                autoPlay
                muted
                loop
                playsInline
                onError={handleVideoError}
              />
            )}
          </motion.div>
        )}
      </div>
    </div>
  );
}


///scroll appear



"use client"
import { useEffect, useState } from "react";
import Link from 'next/link';
import Image from 'next/image';
import { motion, AnimatePresence } from "framer-motion";

export function HeroSection(){
    const [videoSize, setVideoSize] = useState({ width: 800, height: 450 });
    const [currentFontIndex, setCurrentFontIndex] = useState(0);
    const [showMainTitle, setShowMainTitle] = useState(false);
    const [startFontAnimation, setStartFontAnimation] = useState(false);
    const [showSubtext, setShowSubtext] = useState(false);
    const [showButton, setShowButton] = useState(false);
    const [showLayout, setShowLayout] = useState(false);
    const [titlePosition, setTitlePosition] = useState({ x: 0, y: 0 });

    const fonts = [
        'font-serif italic text-amber-950',
        'font-mono font-bold text-amber-950',
        'font-sans font-extrabold italic text-amber-950',
        'wulkan-display text-amber-950'
    ];

    useEffect(() => {
        const timeouts: NodeJS.Timeout[] = [];
        setShowMainTitle(true);

        const timeout1 = setTimeout(() => setStartFontAnimation(true), 1000);
        timeouts.push(timeout1);

        const timeout2 = setTimeout(() => {
            let i = 0;
            const interval = setInterval(() => {
                i++;
                if (i < fonts.length) {
                    setCurrentFontIndex(i);
                } else {
                    clearInterval(interval);
                }
            }, 500);
            timeouts.push(interval);
        }, 1500);
        timeouts.push(timeout2);

        return () => {
            timeouts.forEach(clearTimeout);
        };
    }, []);

    useEffect(() => {
        function handleScroll() {
            const scrollY = window.scrollY;
            const maxScroll = 500;
            const progress = Math.min(scrollY / maxScroll, 1);
            
            // Responsive video sizing based on screen width
            const screenWidth = window.innerWidth;
            let baseWidth, maxWidth, baseHeight, maxHeight;
            
            if (screenWidth < 1280) { // Smaller screens
                baseWidth = 600;
                maxWidth = 800;
                baseHeight = 338;
                maxHeight = 450;
            } else { // Large screens
                baseWidth = 800;
                maxWidth = 1200;
                baseHeight = 450;
                maxHeight = 675;
            }
            
            const width = baseWidth + (maxWidth - baseWidth) * progress;
            const height = baseHeight + (maxHeight - baseHeight) * progress;
            setVideoSize({ width, height });

            // Show layout elements on scroll
            if (scrollY > 100) {
                setShowSubtext(true);
                setShowButton(true);
                setShowLayout(true);
            }
        }
        window.addEventListener("scroll", handleScroll);
        return () => window.removeEventListener("scroll", handleScroll);
    }, []);

    return (
        <div>
            {/* Mobile/Tablet View (hidden on lg) */}
            <div className="lg:hidden h-[600px] sm:h-[700px] mt-22 flex flex-col items-center justify-start pt-12" style={{backgroundColor: '#F1F2F6'}}>
                <div className="w-full max-w-4xl px-4">
                    <motion.h1 
                        initial={{ y: 100, opacity: 0 }}
                        animate={showMainTitle ? { y: 0, opacity: 1 } : {}}
                        transition={{ duration: 1 }}
                        className="text-3xl sm:text-4xl  text-amber-950 text-center tracking-wider gilda-display-regular mb-10"
                    >
                        <span className="manrope">Homes</span>{" "}
                        {startFontAnimation ? (
                            <AnimatePresence mode="wait">
                                <motion.span
                                    key={currentFontIndex}
                                    initial={{ opacity: 0, y: -10 }}
                                    animate={{ opacity: 1, y: 0 }}
                                    exit={{ opacity: 0, y: 10 }}
                                    transition={{ duration: 0.4 }}
                                    className={`inline-block ${fonts[currentFontIndex]}`}
                                >
                                    Uniquely
                                </motion.span>
                            </AnimatePresence>
                        ) : (
                            <span className="wulkan-display text-amber-950">Uniquely</span>
                        )}{" "}
                        <span className="manrope">Built</span>
                    </motion.h1>

                    {showSubtext && (
                        <motion.p
                            initial={{ opacity: 0, y: 20 }}
                            animate={{ opacity: 1, y: 0 }}
                            transition={{ delay: 0.1, duration: 0.6 }}
                            className="text-center text-base sm:text-lg font-semibold text-amber-950 mb-9 mt-16"
                        >
                            Your Home Deserves More Than Just Design — it deserves the story only your home can tell
                        </motion.p>
                    )}

                    {showButton && (
                        <motion.div
                            initial={{ opacity: 0, scale: 0.9 }}
                            animate={{ opacity: 1, scale: 1 }}
                            transition={{ delay: 0.2, duration: 0.5 }}
                            className="flex justify-center"
                        >
                            <Link href="/Contact">
                                <div className="manrope-medium w-[150px] h-[45px] bg-[#DDCDC1] flex items-center justify-center rounded-full mt-5 shadow-lg border-b-4 border-[#b8a48c] transition duration-150 active:translate-y-1 active:shadow hover:shadow-2xl cursor-pointer select-none text-base tracking-tight">
                                    Get Consultation
                                </div>
                            </Link>
                        </motion.div>
                    )}

                    {showLayout && (
                        <motion.div
                            initial={{ opacity: 0, y: 40 }}
                            animate={{ opacity: 1, y: 0 }}
                            transition={{ delay: 0.3, duration: 0.6 }}
                            className="w-full flex justify-center mt-20"
                        >
                            <video
                                src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//DemoVideo.mp4"
                                className="w-full rounded-2xl shadow-lg"
                                autoPlay
                                muted
                                loop
                                playsInline
                            />
                        </motion.div>
                    )}
                </div>
            </div>

            {/* Desktop Layout (lg and above) - Responsive sizing */}
            <div className="hidden lg:block h-[1000px] xl:h-[1100px] 2xl:h-[1200px]" style={{backgroundColor: '#F1F2F6'}}>
                <div className="max-w-7xl mx-auto px-4 xl:px-8 2xl:px-12">
                    <motion.div 
                        initial={{ y: 100, opacity: 0, x: 0 }}
                        animate={showMainTitle ? { y: 0, opacity: 1, x: 0 } : {}}
                        transition={{ duration: 1 }}
                        className="text-4xl lg:text-5xl xl:text-[48px] 2xl:text-7xl mt-16 lg:mt-20 xl:mt-24 mb-4 text-amber-950 text-center pt-10 wulkan-display"
                    >
                        <motion.span 
                            initial={{ x: 0 }}
                            animate={showMainTitle ? { x: 32 } : {}}
                            transition={{ delay: 1.5, duration: 0.8 }}
                            className="manrope-semibold"
                        >
                            Homes
                        </motion.span>{" "}
                        {startFontAnimation ? (
                            <AnimatePresence mode="wait">
                                <motion.span
                                    key={currentFontIndex}
                                    initial={{ opacity: 0, y: -10 }}
                                    animate={{ opacity: 1, y: 0 }}
                                    exit={{ opacity: 0, y: 10 }}
                                    transition={{ duration: 0.4 }}
                                    className={`inline-block ${fonts[currentFontIndex]}`}
                                >
                                    uniquely
                                </motion.span>
                            </AnimatePresence>
                        ) : (
                            <span className="wulkan-display text-amber-950">uniquely</span>
                        )}{" "}
                        <motion.span 
                            initial={{ x: 0 }}
                            animate={showMainTitle ? { x: -32 } : {}}
                            transition={{ delay: 1.5, duration: 0.8 }}
                            className="manrope-semibold"
                        >
                            Built
                        </motion.span>
                    </motion.div>

                    {showSubtext && (
                        <motion.div
                            initial={{ opacity: 0, y: 20 }}
                            animate={{ opacity: 1, y: 0 }}
                            transition={{ delay: 0.1, duration: 0.6 }}
                            className="text-center text-base lg:text-lg xl:text-xl 2xl:text-2xl font-medium text-amber-950 pl-10 pt-2 .manrope-semibold"
                        >
                            Your Home Deserves More Than Just Design — it deserves the story only your home can tell
                        </motion.div>
                    )}

                    {showButton && (
                        <motion.div
                            initial={{ opacity: 0, scale: 0.9 }}
                            animate={{ opacity: 1, scale: 1 }}
                            transition={{ delay: 0.2, duration: 0.5 }}
                            className="flex justify-center mt-8 lg:mt-10 xl:mt-12"
                        >
                            <Link href="/Contact">
                                <div className="manrope-semibold w-[140px] lg:w-[150px] xl:w-[200px] h-[40px] lg:h-[45px] xl:h-[50px] bg-[#DDCDC1] flex items-center justify-center rounded-full shadow-lg border-b-4 border-[#b8a48c] transition duration-150 active:translate-y-1 active:shadow hover:shadow-2xl cursor-pointer select-none text-base tracking-tight">
                                    Get Consultation
                                </div>
                            </Link>
                        </motion.div>
                    )}

                    {showLayout && (
                        <motion.div
                            initial={{ opacity: 0, y: 40 }}
                            animate={{ opacity: 1, y: 0 }}
                            transition={{ delay: 0.3, duration: 0.6 }}
                            className="flex justify-center items-start mt-8 lg:mt-6 xl:mt-8 2xl:mt-10"
                        >
                            {/* Left column */}
                            <div className="flex flex-col flex-shrink-0 flex-grow-0 w-[280px] lg:w-[320px] xl:w-[350px] 2xl:w-[400px]">
                                <div className="w-full h-[160px] lg:h-[180px] xl:h-[200px] 2xl:h-[220px] ml-8 lg:ml-12 xl:ml-16 2xl:ml-20 rounded-2xl relative shadow-2xl hover:shadow-3xl transition hover:-translate-y-1">
                                    <Image 
                                        loading="lazy" 
                                        src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//img1.jpg" 
                                        alt="" 
                                        width={400} 
                                        height={220} 
                                        className="object-cover rounded-2xl w-full h-full"
                                    />
                                </div>
                                <div className="w-[120px] lg:w-[130px] xl:w-[150px] 2xl:w-[160px] h-[120px] lg:h-[140px] xl:h-[170px] 2xl:h-[180px] rounded-2xl mt-16 lg:mt-20 xl:mt-24 2xl:mt-28 ml-20 lg:ml-24 xl:ml-28 2xl:ml-32 shadow-2xl hover:shadow-3xl transition hover:-translate-y-1">
                                    <Image 
                                        loading="lazy" 
                                        src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//img3.jpg" 
                                        alt="" 
                                        width={160} 
                                        height={180} 
                                        className="object-cover rounded-2xl w-full h-full"
                                    />
                                </div>
                            </div>

                            {/* Center column */}
                            <div className="relative flex flex-col items-center justify-start flex-shrink-0 flex-grow-0 w-[600px] lg:w-[700px] xl:w-[800px] 2xl:w-[900px] min-w-0">
                                <div
                                    className="-ml-1 rounded-2xl flex items-center justify-center"
                                    style={{
                                        position: 'absolute',
                                        left: '50%',
                                        top: '100px',
                                        transform: 'translateX(-50%)',
                                        width: videoSize.width,
                                        height: videoSize.height,
                                        zIndex: 20,
                                        transition: 'width 0.3s, height 0.3s',
                                        boxShadow: '0 8px 32px rgba(0,0,0,0.15)',
                                        pointerEvents: 'none',
                                        maxWidth: 'none',
                                    }}
                                >
                                    <video
                                        src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//DemoVideo.mp4"
                                        style={{ width: '100%', height: '100%', objectFit: 'cover', borderRadius: '1rem' }}
                                        autoPlay
                                        muted
                                        loop
                                        playsInline
                                    />
                                </div>
                            </div>

                            {/* Right column */}
                            <div className="w-[200px] lg:w-[220px] xl:w-[270px] 2xl:w-[300px] h-[250px] lg:h-[280px] xl:h-[350px] 2xl:h-[380px] rounded-2xl mr-8 lg:mr-12 xl:mr-16 2xl:mr-20 ml-4 lg:ml-6 xl:ml-8 flex-shrink-0 flex-grow-0 shadow-2xl hover:shadow-3xl transition hover:-translate-y-1">
                                <Image 
                                    loading="lazy" 
                                    src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//img2.jpg" 
                                    alt="" 
                                    width={300} 
                                    height={380} 
                                    className="object-cover rounded-2xl w-full h-full"
                                />
                            </div>
                        </motion.div>
                    )}
                </div>
            </div>
        </div>
    )
}



  

