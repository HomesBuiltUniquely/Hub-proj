'use client';

import { useEffect, useRef, useState } from "react";
import {NavBar} from "./Navbar"

export default function Header() {
  const images = ["1.svg", "2.png", "3.svg", "4.jpg"];
  const extendedImages = [images[images.length - 1], ...images, images[0]];

  const [currentIndex, setCurrentIndex] = useState(1);
  const [isTransitioning, setIsTransitioning] = useState(true);

  const touchStartXRef = useRef(0);
  const touchEndXRef = useRef(0);
  const mouseDownRef = useRef(false);

  useEffect(() => {
    const interval = setInterval(() => {
      goToNext();
    }, 3000);
    return () => clearInterval(interval);
  }, []);

  const handleTransitionEnd = () => {
    if (currentIndex === extendedImages.length - 1) {
      setTimeout(() => {
        setIsTransitioning(false);
        setCurrentIndex(1);
      }, 0);
    } else if (currentIndex === 0) {
      setTimeout(() => {
        setIsTransitioning(false);
        setCurrentIndex(images.length);
      }, 0);
    }
  };

  useEffect(() => {
    if (!isTransitioning) {
      // Trigger transition back ON after resetting position
      requestAnimationFrame(() => {
        setIsTransitioning(true);
      });
    }
  }, [isTransitioning]);

  const handleTouchStart = (e: any) => {
    if (!isTransitioning) return;
    touchStartXRef.current = e.touches[0].clientX;
  };

  const handleTouchEnd = (e: any) => {
    if (!isTransitioning) return;
    touchEndXRef.current = e.changedTouches[0].clientX;
    const distance = touchStartXRef.current - touchEndXRef.current;
    if (distance > 50) goToNext();
    else if (distance < -50) goToPrevious();
  };

  const handleMouseDown = (e: React.MouseEvent) => {
    if (!isTransitioning) return;
    mouseDownRef.current = true;
    touchStartXRef.current = e.clientX;
  };

  const handleMouseUp = (e: React.MouseEvent) => {
    if (!isTransitioning || !mouseDownRef.current) return;
    mouseDownRef.current = false;
    touchEndXRef.current = e.clientX;
    const distance = touchStartXRef.current - touchEndXRef.current;
    if (distance > 50) goToNext();
    else if (distance < -50) goToPrevious();
  };

  const handleMouseLeave = () => {
    mouseDownRef.current = false;
  };

  const goToNext = () => {
    if (!isTransitioning) return;
    setCurrentIndex((prev) => prev + 1);
  };

  const goToPrevious = () => {
    if (!isTransitioning) return;
    setCurrentIndex((prev) => prev - 1);
  };

  const getTransform = () => {
    return `translateX(-${currentIndex * 100}%)`;
  };

  return (
    <div className="relative w-full h-[850px] overflow-hidden bg-black">
      <NavBar />
      <div
        className="w-full h-full relative"
        onTouchStart={handleTouchStart}
        onTouchEnd={handleTouchEnd}
        onMouseDown={handleMouseDown}
        onMouseUp={handleMouseUp}
        onMouseLeave={handleMouseLeave}
        style={{ cursor: "grab", userSelect: "none" }}
      >
        {/* Left Arrow */}
        <button
          onClick={goToPrevious}
          aria-label="Previous slide"
          className="absolute top-1/2 left-4 z-10 transform -translate-y-1/2 bg-white hover:bg-opacity-90 rounded-full w-12 h-12 flex items-center justify-center shadow-md text-2xl"
          style={{ outline: "none" }}
          disabled={!isTransitioning}
        >
          &#8592;
        </button>

        {/* Right Arrow */}
        <button
          onClick={goToNext}
          aria-label="Next slide"
          className="absolute top-1/2 right-4 z-10 transform -translate-y-1/2 bg-white hover:bg-opacity-90 rounded-full w-12 h-12 flex items-center justify-center shadow-md text-2xl"
          style={{ outline: "none" }}
          disabled={!isTransitioning}
        >
          &#8594;
        </button>

        {/* Carousel */}
        <div
          className={`flex h-full w-full ${
            isTransitioning ? "transition-transform duration-[1500ms] ease-in-out" : ""
          }`}
          style={{ transform: getTransform() }}
          onTransitionEnd={handleTransitionEnd}
        >
          {extendedImages.map((src, idx) => (
            <img
              key={idx}
              src={src}
              alt={`Slide ${idx}`}
              className="w-full h-full object-cover flex-shrink-0"
              draggable={false}
              style={{ minWidth: "100%", minHeight: "100%" }}
            />
          ))}
        </div>
      </div>
    </div>
  );
}


'use client';

import { useEffect, useRef, useState } from "react";
import {NavBar} from "./Navbar"

export default function Header() {
  const images = ["1.svg", "2.png", "3.svg", "4.jpg"];
  const extendedImages = [images[images.length - 1], ...images, images[0]];

  const [currentIndex, setCurrentIndex] = useState(1);
  const [isTransitioning, setIsTransitioning] = useState(true);

  const touchStartXRef = useRef(0);
  const touchEndXRef = useRef(0);
  const mouseDownRef = useRef(false);

  useEffect(() => {
    const interval = setInterval(() => {
      goToNext();
    }, 3000);
    return () => clearInterval(interval);
  }, []);

  const handleTransitionEnd = () => {
    if (currentIndex === extendedImages.length - 1) {
      setTimeout(() => {
        setIsTransitioning(false);
        setCurrentIndex(1);
      }, 0);
    } else if (currentIndex === 0) {
      setTimeout(() => {
        setIsTransitioning(false);
        setCurrentIndex(images.length);
      }, 0);
    }
  };

  useEffect(() => {
    if (!isTransitioning) {
      requestAnimationFrame(() => {
        setIsTransitioning(true);
      });
    }
  }, [isTransitioning]);

  const handleTouchStart = (e: any) => {
    if (!isTransitioning) return;
    touchStartXRef.current = e.touches[0].clientX;
  };

  const handleTouchEnd = (e: any) => {
    if (!isTransitioning) return;
    touchEndXRef.current = e.changedTouches[0].clientX;
    const distance = touchStartXRef.current - touchEndXRef.current;
    if (distance > 50) goToNext();
    else if (distance < -50) goToPrevious();
  };

  const handleMouseDown = (e: React.MouseEvent) => {
    if (!isTransitioning) return;
    mouseDownRef.current = true;
    touchStartXRef.current = e.clientX;
  };

  const handleMouseUp = (e: React.MouseEvent) => {
    if (!isTransitioning || !mouseDownRef.current) return;
    mouseDownRef.current = false;
    touchEndXRef.current = e.clientX;
    const distance = touchStartXRef.current - touchEndXRef.current;
    if (distance > 50) goToNext();
    else if (distance < -50) goToPrevious();
  };

  const handleMouseLeave = () => {
    mouseDownRef.current = false;
  };

  const goToNext = () => {
    if (!isTransitioning) return;
    setCurrentIndex((prev) => prev + 1);
  };

  const goToPrevious = () => {
    if (!isTransitioning) return;
    setCurrentIndex((prev) => prev - 1);
  };

  const getTransform = () => {
    return `translateX(-${currentIndex * 100}%)`;
  };

  return (
    <div className="relative w-full h-[850px] overflow-hidden bg-black">
      <NavBar />
      <div
        className="w-full h-full relative"
        onTouchStart={handleTouchStart}
        onTouchEnd={handleTouchEnd}
        onMouseDown={handleMouseDown}
        onMouseUp={handleMouseUp}
        onMouseLeave={handleMouseLeave}
        style={{ cursor: "grab", userSelect: "none" }}
      >
        {/* Carousel without navigation arrows */}
        <div
          className={`flex h-full w-full ${
            isTransitioning ? "transition-transform duration-[1500ms] ease-in-out" : ""
          }`}
          style={{ transform: getTransform() }}
          onTransitionEnd={handleTransitionEnd}
        >
          {extendedImages.map((src, idx) => (
            <img
              key={idx}
              src={src}
              alt={`Slide ${idx}`}
              className="w-full h-full object-cover flex-shrink-0"
              draggable={false}
              style={{ minWidth: "100%", minHeight: "100%" }}
            />
          ))}
        </div>
      </div>
    </div>
  );
}




'use client';

import Image from "next/image";

export function BrandCorosal() {
  return (
    <div className="w-full overflow-hidden bg-[#F1F2F6] py-10">
      <div className="text-center mb-10 text-4xl gilda-display-regular text-amber-950 tracking-wider mt-3">Trusted Partners</div>
      <div className="flex scroll-track whitespace-nowrap mt-15 relative">
        <div className="flex-shrink-0 px-10 ">
          <Image loading="lazy" src="/Bulm1.webp" alt="Blum" fill className="h-20 mt-2 " />
        </div>
        <div className="flex-shrink-0 px-10">
          <Image loading="lazy" src="/ebco1.png" alt="Ebco" fill className="h-20 mt-4" />
        </div>
        <div className="flex-shrink-0 px-10">
          <Image loading="lazy" src="/elica1.png" alt="elica1" fill className="h-20 mt-5 " />
        </div>
        <div className="flex-shrink-0 px-10">
          <Image loading="lazy" src="/Faber1.png" alt="Faber" fill className="h-20 mt-6" />
        </div>
        <div className="flex-shrink-0 px-10">
          <Image loading="lazy"  src="/Hetich1.png" alt="Hettich" fill className="h-20  " />
        </div>
        <div className="flex-shrink-0 px-10">
          <Image loading="lazy"  src="/Rehau1.png" alt="Hettich" fill className="h-20  mt-1" />
        </div>
        <div className="flex-shrink-0 px-10">
          <Image  loading="lazy" src="/AsainPaints.png" alt="AsainPaints" fill className="h-20  mt-1" />
        </div>
      </div>
    </div>
  );
}



//cx

'use client';
import { useState, useEffect, useRef } from 'react';



export function CxSection() {

  const videos = [
    { src: 'https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//execution%20(1)%20(1)%20(1).mp4', title: 'Testimonial 1' },
    { src: 'https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//hub%20journey%20(1)%20(1)%20(1).mp4', title: 'Testimonial 2' },
    { src: 'https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//execution%20(1)%20(1)%20(1).mp4', title: 'Testimonial 3' },
    { src: 'https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//hub%20journey%20(1)%20(1)%20(1).mp4', title: 'Testimonial 4' }
  ];

  const [currentVideoIndex, setCurrentVideoIndex] = useState(0);
  const [isPlaying, setIsPlaying] = useState(false); // Start paused
  const videoRefs = useRef<(HTMLVideoElement | null)[]>([]);

  // Always show 3 videos (current, next, previous)
  const visibleVideos = [
    videos[(currentVideoIndex - 1 + videos.length) % videos.length],
    videos[currentVideoIndex],
    videos[(currentVideoIndex + 1) % videos.length]
  ];

  useEffect(() => {
    const interval = setInterval(() => {
      if (isPlaying) {
        setCurrentVideoIndex((prev) => (prev + 1) % videos.length);
      }
    }, 8000);
    return () => clearInterval(interval);
  }, [videos.length, isPlaying]);

  const togglePlayPause = () => {
    const centerVideo = videoRefs.current[1];
    if (centerVideo) {
      if (isPlaying) {
        centerVideo.pause();
      } else {
        centerVideo.play();
      }
      setIsPlaying(!isPlaying);
    }
  };

  const handleVideoClick = (index: number) => {
    if (index === 1) {
      togglePlayPause();
    } else {
      // Mute all videos first
      videoRefs.current.forEach(video => {
        if (video) video.muted = true;
      });
      
      setCurrentVideoIndex((currentVideoIndex + index - 1 + videos.length) % videos.length);
      setIsPlaying(false); // Keep paused when switching
      
      // Unmute the new center video after state update
      setTimeout(() => {
        if (videoRefs.current[1]) {
          videoRefs.current[1].muted = false;
        }
      }, 0);
    }
  };

  return (
    <div className="h-[750px] flex flex-col items-center bg-[#F1F2F6] py-10">
      <div className="text-center mb-12">
        <h1 className="text-4xl font-light gilda-display-regular text-amber-950 mb-4 mr-3">
          Testimonials
        </h1>
      </div>

      {/* Triple Video Carousel */}
      <div className="relative w-[90%] max-w-[1400px] h-[500px] flex gap-6 mt-10">
        {visibleVideos.map((video, index) => (
          <div 
            key={`${video.src}-${index}`}
            className={`relative flex-1 rounded-lg overflow-hidden shadow-2xl transition-all duration-500 ${
              index === 1 ? 'z-10 scale-105' : 'z-0 scale-95 opacity-90'
            }`}
            onClick={() => handleVideoClick(index)}
          >
            <video
              ref={(el: HTMLVideoElement | null) => {
                videoRefs.current[index] = el;
              }}
              src={video.src}
              className="w-full h-full object-cover cursor-pointer"
              autoPlay={false}
              muted={index !== 1}
              loop
              playsInline
            />
            
            {/* Centered play button (only shows when paused) */}
            {index === 1 && !isPlaying && (
              <button 
                onClick={(e) => {
                  e.stopPropagation();
                  togglePlayPause();
                }}
                className="absolute inset-0 m-auto w-16 h-16 bg-black/20 rounded-full flex items-center justify-center"
              >
                <span className="text-white text-3xl">▶</span>
              </button>
            )}
          </div>
        ))}
      </div>

      {/* Navigation indicators */}
      <div className="flex gap-4 mt-8">
        {videos.map((_, index) => (
          <button
            key={index}
            onClick={() => {
              // Mute all videos first
              videoRefs.current.forEach(video => {
                if (video) video.muted = true;
              });
              
              setCurrentVideoIndex(index);
              setIsPlaying(false); // Keep paused when navigating
              
              // Unmute the new center video after state update
              setTimeout(() => {
                if (videoRefs.current[1]) {
                  videoRefs.current[1].muted = false;
                }
              }, 0);
            }}
            className={`w-3 h-3 rounded-full transition-all ${
              currentVideoIndex === index ? 'bg-[#DDCDC1] w-6' : 'bg-gray-400'
            }`}
          />
        ))}
      </div>
    </div>
  );
}


//footer

import Link from "next/link"
import Image from "next/image";

export function Footer() {

  return (
      <footer className="bg-[#DDCDC1] pt-12 pb-6 px-6">
        {/* Top Section */}
        <div className="flex justify-around">

          <div>
            <h3 className="text-sm font-bold mb-4 text-[#2B1D14]">SUPPORT</h3>
            <ul className="space-y-2 text-sm text-[#4A3F35]">
              <div className="flex">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" className="size-4 mr-3 mt-0.5">
                  <path fillRule="evenodd" d="M19.5 9.75a.75.75 0 0 1-.75.75h-4.5a.75.75 0 0 1-.75-.75v-4.5a.75.75 0 0 1 1.5 0v2.69l4.72-4.72a.75.75 0 1 1 1.06 1.06L16.06 9h2.69a.75.75 0 0 1 .75.75Z" clipRule="evenodd" />
                  <path fillRule="evenodd" d="M1.5 4.5a3 3 0 0 1 3-3h1.372c.86 0 1.61.586 1.819 1.42l1.105 4.423a1.875 1.875 0 0 1-.694 1.955l-1.293.97c-.135.101-.164.249-.126.352a11.285 11.285 0 0 0 6.697 6.697c.103.038.25.009.352-.126l.97-1.293a1.875 1.875 0 0 1 1.955-.694l4.423 1.105c.834.209 1.42.959 1.42 1.82V19.5a3 3 0 0 1-3 3h-2.25C8.552 22.5 1.5 15.448 1.5 6.75V4.5Z" clipRule="evenodd" />
              </svg><li>+91 889 889 2223</li></div>
              <div className="flex">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" className="size-4 mr-3 mt-0.5">
                <path d="M1.5 8.67v8.58a3 3 0 0 0 3 3h15a3 3 0 0 0 3-3V8.67l-8.928 5.493a3 3 0 0 1-3.144 0L1.5 8.67Z" />
                <path d="M22.5 6.908V6.75a3 3 0 0 0-3-3h-15a3 3 0 0 0-3 3v.158l9.714 5.978a1.5 1.5 0 0 0 1.572 0L22.5 6.908Z" />
              </svg><li>hello@homesunderbudget.com</li></div>
              <div className="flex">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" className="size-4 mr-3 mt-0.5">
                <path fillRule="evenodd" d="m11.54 22.351.07.04.028.016a.76.76 0 0 0 .723 0l.028-.015.071-.041a16.975 16.975 0 0 0 1.144-.742 19.58 19.58 0 0 0 2.683-2.282c1.944-1.99 3.963-4.98 3.963-8.827a8.25 8.25 0 0 0-16.5 0c0 3.846 2.02 6.837 3.963 8.827a19.58 19.58 0 0 0 2.682 2.282 16.975 16.975 0 0 0 1.145.742ZM12 13.5a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z" clipRule="evenodd" />
              </svg><li>HBR Layout, Bangalore</li></div>
              <div className="flex">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" className="size-4 mr-3 mt-0.5">
                <path fillRule="evenodd" d="m11.54 22.351.07.04.028.016a.76.76 0 0 0 .723 0l.028-.015.071-.041a16.975 16.975 0 0 0 1.144-.742 19.58 19.58 0 0 0 2.683-2.282c1.944-1.99 3.963-4.98 3.963-8.827a8.25 8.25 0 0 0-16.5 0c0 3.846 2.02 6.837 3.963 8.827a19.58 19.58 0 0 0 2.682 2.282 16.975 16.975 0 0 0 1.145.742ZM12 13.5a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z" clipRule="evenodd" />
              </svg><li>Sarjapur Road, Bangalore</li></div>
            </ul>
          </div>
  
          {/* Social Media */}
          <div>
            <h3 className="text-sm font-bold mb-4 text-[#2B1D14] ml-8" >SOCIAL MEDIA</h3>
            <ul className="space-y-2 text-sm text-[#4A3F35]">
            <div className="flex"> 
              <div className="flex"><Image loading="lazy" src="/facebook.png" width={350} height={200} alt="facebook" className="size-5 mr-3 mb-1"></Image><li className="hover:text-amber-50"><Link href="https://www.facebook.com/HomesUnderBudget/" className="mr-5">Facebook</Link></li></div>
              <div className="flex"><Image loading="lazy" src="/twitter.png" width={350} height={200} alt="twitter" className="size-5 mr-3 mb-1"></Image><li className="hover:text-amber-50"><Link href="https://x.com/Homeunderbudget" className="">Twitter</Link></li></div>
            </div>
            <div className="flex">
              <div className="flex"><Image loading="lazy" src="/pinterest.png" width={350} height={200} alt="pintrest" className="size-5 mr-3 mb-1"></Image><li className="hover:text-amber-50"><Link href="https://in.pinterest.com/homesunderbudget/" className="mr-5">Pinterest</Link></li></div>
              <div className="flex ml-1.5"><Image loading="lazy" src="/instagram.png" width={350} height={200} alt="instagram" className="size-5 mr-3 mb-1"></Image><li className="hover:text-amber-50"><Link href="https://www.instagram.com/homesunderbudget/">Instagram</Link></li></div>
            </div>
            <div className="flex">
              <div className="flex"><Image loading="lazy" src="/youtube.png" width={350} height={200} alt="Youtube" className="size-5 mr-3 mb-1"></Image><li className="hover:text-amber-50"><Link href="https://www.youtube.com/@homesunderbudget" className="mr-5">Youtube</Link></li></div>
              <div className="flex ml-3"><Image loading="lazy" src="/message.png" width={350} height={200} alt="Linkdin" className="size-5 mr-3 mb-1"></Image><li className="hover:text-amber-50"><Link href="https://www.linkedin.com/company/homesunderbudget/">LinkedIn</Link></li></div>
            </div>
            </ul>
          </div>

        </div>
  
        {/* Divider */}
        <div className="border-t border-[#B4A596] mt-12 mb-6"></div>
  
        {/* Bottom Bar */}
        <div className="max-w-7xl mx-auto flex flex-col md:flex-row justify-between items-center gap-4 px-2">
          <p className="text-sm text-[#5A4C43]">
            © 2025 BRIGHTSPACE CREATIONS PRIVATE LIMITED All rights reserved.
          </p>
        </div>
      </footer>
    );
  }


  //form

'use client';
import { useState } from 'react';
import Image from 'next/image';

type RoomType = 'Living Room' | 'Kitchen Room' | 'BedRoom' | 'Kids Room' | 'Devotional Room';

interface RoomItem {
  image: string;
}

export function Form() {
  const [activeRoom, setActiveRoom] = useState<RoomType>('Living Room');
  const [hoveredRoom, setHoveredRoom] = useState<RoomType | null>(null);

  const roomData: Record<RoomType, RoomItem[]> = {
    'Living Room': [
      { image: 'https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4/img1.jpg' },
      { image: 'https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4/img2.jpg' },
      { image: 'https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4/img3.jpg' },
      { image: 'https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4/img4.jpg' },
      { image: 'https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4/img5.jpg' },
      { image: 'https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4/img6.jpg' }
    ],
    'Kitchen Room': [
      { image: '/kitchen1.jpg' },
      { image: '/kitchen2.jpg' },
      { image: '/kitchen3.jpg' },
      { image: '/kitchen4.jpg' },
      { image: '/kitchen5.jpg' },
      { image: '/kitchen6.jpg' }
    ],
    'BedRoom': [
      { image: '/bed1.jpg' },
      { image: '/bed2.jpg' },
      { image: '/bed3.jpg' },
      { image: '/bed4.jpg' },
      { image: '/bed5.jpg' },
      { image: '/bed6.jpg' }
    ],
    'Kids Room': [
      { image: '/kids1.jpg' },
      { image: '/kids2.jpg' },
      { image: '/kids3.jpg' },
      { image: '/kids4.jpg' },
      { image: '/kids5.jpg' },
      { image: '/kids6.jpg' }
    ],
    'Devotional Room': [
      { image: '/pooja1.jpg' },
      { image: '/pooja2.jpg' },
      { image: '/pooja3.jpg' },
      { image: '/pooja4.jpg' },
      { image: '/pooja5.jpg' },
      { image: '/pooja6.jpg' }
    ]
  };

  const roomTypes = Object.keys(roomData) as RoomType[];

  return (
    <div className="min-h-screen mt-25 ml-30 text">
      <h1 className="text-4xl font-extrabold text-amber-950 tracking-wider gilda-display-regular mb-15">
        The Features You Need, The Simplicity You Want
      </h1>

      <div className="flex">
        {/* Sidebar with hover effect only */}
        <div className="w-[250px] sticky top-20 h-fit mt-10 ">
          {roomTypes.map((room) => (
            <div
              key={room}
              className="relative h-[50px] mb-10"
              onMouseEnter={() => setHoveredRoom(room)}
              onMouseLeave={() => setHoveredRoom(null)}
              onClick={() => setActiveRoom(room)}
            >
              {/* Hover background only */}
              <div
                className={`absolute inset-0 rounded-3xl transition-all duration-300 z-0 ${
                  hoveredRoom === room ? 'bg-[#DDCDC1] opacity-100' : 'opacity-0'
                }`}
              />
              <h1
                className="relative z-10 text-center text-[20px] font-bold cursor-pointer gilda-display-regular h-full flex items-center justify-center"
              >
                {room}
              </h1>
            </div>
          ))}
        </div>

        {/* Content section */}
        <div className="ml-20 flex-1">
          <div className="flex flex-wrap gap-6">
            {roomData[activeRoom].map((item, index) => (
              <div
                key={`${activeRoom}-${index}`}
                className="w-[290px] h-[330px] rounded-3xl overflow-hidden"
              >
                <Image
                  loading='lazy'
                  width={290} height={330}
                  src={item.image}
                  alt=""
                  className="w-full h-full object-cover"
                />
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
}


//herosection


"use client"

import { useEffect, useState } from "react";
import Link from 'next/link';
import Image from 'next/image'

export function HeroSection(){
    // State to track scroll position
    const [videoSize, setVideoSize] = useState({ width: 800, height: 450 });

    useEffect(() => {
        function handleScroll() {
            const scrollY = window.scrollY;
            const maxScroll = 500;
            const progress = Math.min(scrollY / maxScroll, 1);
            const width = 800 + (1200 - 800) * progress;
            const height = 450 + (675 - 450) * progress;
            setVideoSize({ width, height });
        }
        window.addEventListener("scroll", handleScroll);
        return () => window.removeEventListener("scroll", handleScroll);
    }, []);

    return (
        <div>
        <div className="  h-[1000px]" style={{backgroundColor: '#F1F2F6'}}>
            <div className="">
            <div className="text-5xl mt-29  mb-4 font-semibold text-amber-950 text-center tracking-wider pl-8 pt-10 gilda-display-regular" >Homes, Uniquely Built</div>
            <div className="text-center text-[18px] font-semibold text-amber-950 pl-10 pt-2 " > Your Home Deserves More Than Just Design — it deserves the story only your home can tell </div>
            <Link href="/Contact"><div className="w-[150px] h-[45px] bg-[#DDCDC1] ml-165 mt-10 text-center pt-2.5 rounded-full gilda-display-regular  ">Get Consultation</div></Link>
                <div className="flex justify-center items-start ">
                    {/* Left column - fixed width, no grow/shrink */}
                    <div className="flex flex-col flex-shrink-0 flex-grow-0 w-[350px]">
                        <div className=" w-[350px] h-[200px] ml-20 rounded-2xl relative">
                            <Image loading="lazy" src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//img1.jpg" alt="" width={350} height={200} className="object-cover rounded-2xl"></Image>
                        </div>
                        <div className=" w-[150px] h-[170px] rounded-2xl mt-35 ml-40">
                            <Image loading="lazy" src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//img3.jpg" alt="" width={150} height={170} className="object-cover rounded-2xl w-[150px] h-[170px]"></Image>
                        </div>
                    </div>

                    {/* Center column - fixed width, relative for overlay, no grow/shrink */}
                    <div className="relative flex flex-col items-center justify-start flex-shrink-0 flex-grow-0 w-[800px] min-w-[800px] max-w-[800px]">
                        {/* Absolutely positioned expanding video, overlays but never shifts layout */}
                        <div
                            className=" -ml-1 rounded-2xl flex items-center justify-center"
                            style={{
                                position: 'absolute',
                                left: '50%',
                                top: '120px', // adjust as needed
                                transform: 'translateX(-50%)',
                                width: videoSize.width,
                                height: videoSize.height,
                                zIndex: 20,
                                transition: 'width 0.3s, height 0.3s',
                                boxShadow: '0 8px 32px rgba(0,0,0,0.15)',
                                pointerEvents: 'none',
                                maxWidth: 'none',
                            }}
                        >
                            <video
                                src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//DemoVideo.mp4"
                                style={{ width: '100%', height: '100%', objectFit: 'cover', borderRadius: '1rem' }}
                                autoPlay
                                muted
                                loop
                                playsInline
                            />
                        </div>
                    </div>
                    {/* Right column - fixed width, no grow/shrink */}
                    <div className= "w-[270px] h-[350px] rounded-2xl mr-20  ml-2 flex-shrink-0 flex-grow-0">
                        <Image loading="lazy" src="https://yzmnmgrkugecsfnsmhib.supabase.co/storage/v1/object/public/videosmp4//img2.jpg" alt="" width={270} height={350} className="object-cover rounded-2xl "></Image>
                    </div>
                </div>
            </div>
            </div>
            
        </div>
    )
}


//QA section

'use client';
import { useState } from 'react';
import { FaPlus, FaMinus } from 'react-icons/fa';

interface FAQItem {
  question: string;
  answer: string;
}

const faqData: FAQItem[] = [
  {
    question: 'What is the interior design cost in Bangalore for 2BHK, 3BHK, villa, and kitchen?',
    answer: `Interior design costs in Bangalore depend on factors like home size, materials, and customization. At HUB Interior, we offer transparent pricing and affordable design packages:
              2BHK Interiors: ₹2.8 Lakhs onwards

              3BHK Interiors: ₹3.8 Lakhs onwards

              Villa Interiors: ₹5.5 Lakhs onwards

              Kitchen Interiors: ₹1.25 Lakhs onwards

              Our focus is on budget-friendly interiors with premium finishes and high-quality craftsmanship.`
  },
  {
    question: ' What common interior design mistakes should I avoid?',
    answer: `Here are 5 common design mistakes:
            Poor Space Planning → Fix: Optimize layout flow and furniture placement.
            Ignoring Lighting → Fix: Use a combination of task, ambient, and accent lighting.
            Choosing Style Over Comfort → Fix: Prioritize comfort and usability.
            Skipping Storage → Fix: Include multifunctional storage units.
            No Personal Touch → Fix: Add art, photos, and meaningful decor.
            Avoiding these ensures your home is functional and reflects your personality.`
  },
  {
    question: 'Why should I choose HUB Interior for my interior design needs?',
    answer: `HUB Interior offers stylish and durable interiors at an affordable price. Whether you're looking for 2BHK, 3BHK, villa, or modular kitchen interiors, we provide complete solutions with:
              Transparent pricing
              10-year warranty
              No Cost EMI
              25% off on selected packages
              End-to-end project delivery
              Our expert designers turn your ideas into beautiful, functional spaces.`
  },
  {
    question: 'What interior solutions do you offer in Bangalore?',
    answer: `Our complete home interior services in Bangalore include:
              Modular Kitchen & Wardrobes
              TV Units & Entertainment Spaces
              Prayer Units & Study Areas
              Wall Décor & Kids’ Room Designs
              False Ceiling & Lighting
              Foyer & Bar Unit Designs
              Whether you're designing a new home or renovating, we offer affordable interior designers in Bangalore who deliver functional, beautiful spaces.`
  }
];

export function QAsection() {
  const [openIndex, setOpenIndex] = useState<number | null>(null);

  const toggle = (index: number) => {
    setOpenIndex(openIndex === index ? null : index);
  };

  return (
    <div className="min-h-screen px-6 py-16 bg-[#F1F2F6]">
      <h1 className="text-4xl mb-10 text-amber-950 font-semibold gilda-display-regular ml-30">
        Frequently Asked Questions
      </h1>

      <div className="max-w-5xl mx-auto space-y-6 mt-20">
        {faqData.map((item, index) => (
          <div key={index} className="pb-6">
            <div
              className={`border-l-[4px] pl-4 rounded-sm py-4 transition-all duration-300 ${
                openIndex === index ? 'border-[#DDCDC1]' : 'border-transparent'
              }`}
            >
              <button
                className="w-full flex justify-between items-center text-left"
                onClick={() => toggle(index)}
              >
                <span className="text-lg font-medium text-amber-950">
                  {item.question}
                </span>
                <span className="text-amber-950">
                  {openIndex === index ? <FaMinus /> : <FaPlus />}
                </span>
              </button>

              {openIndex === index && (
                <div className="mt-4 text-amber-950 text-base leading-relaxed">
                  {item.answer}
                </div>
              )}
            </div>

            {/* Horizontal line after each question */}
            <hr className="border-t border-gray-300 mt-4" />
          </div>
        ))}
      </div>
    </div>
  );
}


brand BrandCorosal

'use client';

import Image from 'next/image';
import { useEffect, useRef } from 'react';

export function BrandCorosal() {
  const logos = [
    { src: '/Bulm1.webp', alt: 'Blum' },
    { src: '/ebco1.png', alt: 'Ebco' },
    { src: '/elica1.png', alt: 'Elica' },
    { src: '/Faber1.png', alt: 'Faber' },
    { src: '/Hetich1.png', alt: 'Hettich' },
    { src: '/Rehau1.png', alt: 'Rehau' },
    { src: '/AsainPaints.png', alt: 'Asian Paints' },
  ];

  const containerRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    const container = containerRef.current;
    if (!container) return;

    let scrollAmount = 0;
    let direction = 1;

    const scrollInterval = setInterval(() => {
      if (container) {
        scrollAmount += 1;
        container.scrollLeft += direction;

        // Reset scroll to start when halfway through (infinite loop)
        if (scrollAmount >= container.scrollWidth / 2) {
          container.scrollLeft = 0;
          scrollAmount = 0;
        }
      }
    }, 20); // Speed of scroll

    return () => clearInterval(scrollInterval);
  }, []);

  // Duplicate the logos for seamless infinite scroll
  const allLogos = [...logos, ...logos];

  return (
    <div className="w-full bg-[#F1F2F6] py-10 overflow-hidden">
      <div className="text-center mb-10 text-3xl sm:text-4xl font-light gilda-display-regular text-amber-950 tracking-wider">
        Trusted Partners
      </div>

      <div
        ref={containerRef}
        className="flex w-full overflow-x-scroll whitespace-nowrap no-scrollbar hover:pause-scroll"
      >
        {allLogos.map((logo, idx) => (
          <div
            key={idx}
            className="flex-shrink-0 px-10 py-2 flex items-center justify-center"
          >
            <Image
              loading="lazy"
              src={logo.src}
              alt={logo.alt}
              width={120}
              height={60}
              className="object-contain"
            />
          </div>
        ))}
      </div>
    </div>
  );
}



  

